{"version":3,"sources":["components/PopUp.js","components/TrafficLightButtons.js","ActionTypes.js","ActionCreator.js","Constants.js","Tools.js","callableRESTs.js","toastManager.js","components/Communications.js","components/History.js","components/Drive.js","components/ClientInfo.js","components/WindowsServices.js","components/WindowsEvents.js","components/OperationsList.js","components/Dashboard.js","components/AssignLicenses.js","components/LicensesList.js","components/UserData.js","components/ClientHandlerRowServices.js","components/ClientHandlerRowAlert.js","components/SelectMailInterval.js","components/ClientHandler.js","components/ToggleCategoryPlace.js","components/DashboardHome.js","components/LoginPage.js","components/SignUpPage.js","components/UnsubscribeAlertMessage.js","components/RichiediPassword.js","components/ChangePassword.js","App.js","reportWebVitals.js","reducer.js","index.js","REST.js"],"names":["connect","state","dispatch","props","useModal","isModalOpen","openModal","closeModal","launchAction","action","setTimeout","undefined","document","getElementsByClassName","style","marginTop","parseInt","window","scrollY","error","console","onscroll","e","pageYOffset","documentElement","clientHeight","scrollTop","body","messageLink","onClick","className","linkClass","icon","id","isOpen","transition","ModalTransition","SCALE","title","type","footer","Accordion","childs","length","map","child","i","xs","size","problems","titles","href","isHome","popUpChildsProblemi","log","idClientsProblemi","warnings","popUpChildsWarnings","idClientsWarnings","running","LOGIN","SIGNUP","ADDLICENSE","REMOVELICENSE","SEARCHCLIENT","PLACESLIST","CATEGORIESLIST","CATEGORYVSPLACE","SERVICESLIST","EVENTSLIST","UPDATECOMPANYDATA","SERVIZIOVERVIEW","LISTANOMISEDI","UPDATESIDEBAR","CLIENTTEMPLATEWINDOWSSERVICES","CLIENTTEMPLATEWINDOWSEVENTS","CLIENTTEMPLATEINFO","CLIENTTEMPLATEALERT","CLIENTTEMPLATERESET","COMPANYTEMPLATELICENZE","UPDATECLIENTOVERVIEW","UPDATECOMPANYOVERVIEW","FIXSEDI","UPDATECLIENTHISTORY","UPDATECOMPANYHISTORY","UPDATECLIENTLICENSES","TOTALRESET","UPDATETOKEN","GETCONFIGURAZIONEALERT","GETLASTDATE","GETLASTMAILDATE","login","nome_company","id_company","email","emailNotify","client_list","token","lista_sedi","chiave_di_registrazione","listaNomiSedi","listaIdSedi","types","servicesList","updateCTWindowsServices","n_totali","n_running","n_stop","n_monitorati","windows_services","n_esecuzione","updateCTInfo","info","updateCTAlert","alert","resetClientTemplate","updateCompanyTemplateLicenze","lista_licenze","fixSedi","lista_client","totalReset","updateToken","_LICENZE","tipo","label","_MSGCODE","_ALERTCATEGORY","defaultUpperBound","Backend2FrontendDateConverter","bcknd_date","frtnd_date","indexOf","substring","replace","idToNomeSede","listaNomi","listaId","idToNomeLicenza","String","sortResults","prop","asc","list","sort","a","b","autenticazione_fallita","msgCode","renewToken","oldToken","newToken","Backend2FrontendAlertConverter","backend_alert","frontend_alert","require","url_login","url_get_nomi_sedi","url_signup","url_lista_sediFake","url_lista_gruppiFake","url_edit_company_data","url_deep_clientFake","url_loginFake","url_edit_company_dataFake","url_shallow_licenze","url_get_servizi_overview","url_get_servizi_monitoratiFake","url_get_servizi_allFake","url_get_servizi_overviewFake","url_get_eventi_overviewFake","url_get_eventiFake","url_get_servizi_all","url_shallow_licenzeFake","url_get_servizi_allFake2","url_get_servizi_monitoratiFake2","url_get_servizi_monitorati","url_modifica_monitoraggio_servizio","url_get_eventi","url_get_eventi_overview","url_lista_sedi","url_lista_gruppi","url_deep_client","url_shallow_clients","url_modifica_sede","url_get_drives","url_get_n_sedi","url_get_n_sediFake","url_inserimento_sede","url_cancellazione_sede","url_get_latest_alert","url_compra_licenza","url_get_client_overview_services","url_get_client_overview","url_get_client_overview_drives","url_get_company_overview","url_get_client_overview_events","url_get_client_history","url_get_company_history","url_assign_license","url_get_monitoraggio_alert","url_modifica_monitoraggio_alert","url_update_monitoraggio_alert","url_get_last_date","url_get_all_services_of_company","url_get_all_nomi_alert_configurazione","url_update_monitora_all_services","url_update_monitora_all_alerts","url_unsubscribe_alert","url_change_mail_interval","url_get_mail_interval","url_richiedi_password","url_cambio_password","url_is_token_valid","url_get_last_mail_date_and_time","axios","md5","_getPlaces","user","post","_getLicenzeShallow","_getShallowClients","_getEventi","id_client","sottocategoria","slot","n","_getServiziOverview","_getNomiSedi","_getLatestAlerts","n_settimane","_getClientOverview","res_services","errori","data","servicesResponse","eventiResponse","drivesResponse","warning","ok","_getClientHistory","response","res","xaxis","history","forEach","el","push","date","errors","last_update","_getCompanyHistory","toaster","toastOptions","position","reverseOrder","randomID","Math","floor","random","getSuccessToast","message","toast","success","getErrorToast","getLoadingToast","loading","stopLoadingToast","toastToDismiss","dismiss","client_template","configurazione_alert","GetConfigurazioneAlert","operazioni","getConfigurazioneAlert","ClientTemplateAlert","alerts","isOdd","num","React","useState","error_icon","color","warning_icon","success_icon","getChilds","loadingToast","then","renderChilds","listaOperazioni","catch","listaChildren","Col","operazione","monitora","defaultChecked","onChange","toggleMonitora","autoComplete","target","checked","_updateMonitoraggioAlert","useEffect","collapsable","categoria","date_and_time_alert","corpo_messaggio","apex","lastUpdate","options","series","width","height","totalGB","totalSpace","freeGB","occupiedSpace","percentage","toFixed","driveLabel","md","value","text","styles","path","stroke","fill","lista_id_sedi","lista_nomi_sedi","UpdateSidebar","elencoClients","sedi","listaSedi","clientList","updateSidebar","SetClientTemplateInfo","TotalReset","vecchiaSede","nuovaSede","setState","continueUpdating","messageCode","UpdateToken","sede","previousState","clickService","info_tmp","nome","nomeToIdSede","shallowClients","handleVecchiaSede","evt","handleNuovaSede","getLicense","classe_licenza","client","nome_tipologia","mac_address","codice_licenza","lic","j","class","htmlFor","placeholder","disabled","services_list","ServicesList","services","SetOverviewServizi","ClientTemplateReset","getServicesList","tmp_list","confWindowsServices","_getServiziMonitorati","arr1","arr2","tmp_list2","monitoraggi","elem1","elem2","nome_servizio","servicesListMaker","returnList","date_and_time","ServiceControllerStatus","ServiceStartMode","ServiceType","service","hasOwnProperty","getCard","stato","start_type","service_type","ceil","servizio","actualValue","_modificaMonitoraggioServizio","n_stopped","opname","name","autocomplete","events_list","EventsList","events","eventsList","currentSlot","getEventsList","listA","eventi","listC","listH","listS","merged","pagination_foo","posSlot","add","n_sottocategoria","controller","status","localeCompare","categoriesHeaderWasPrinted","compare_sottocategoria","tot_per_sottocategoria","A","C","H","S","onOpen","elem","transform","display","openToggle","onClose","closeToggle","trigger","getCategories","level","source","id_event","task_category","date_and_time_evento","role","aria-label","oddcolor","enabled","selected","url_lista_serviziFake","nome_client","servizi","ops","classList","last_insert_date","logged","clientOverview","drives","chart","categories","curve","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","colors","SetClientTemplateWindowsServices","SetClientTemplateWindowsEvents","n_problemi","n_warnings","windows_events","updateCTWindowsEvents","ResetClientTemplate","SetClientTemplateAlert","SetClientTemplateOverview","overview","problemi","UpdateClientHistory","history_data","updateClientHistory","GetLastDate","getLastDate","clientData","problemi_oggi","warning_oggi","updateData","_getEventiOverview","_getDrives","_getLastDate","maxDate","idInterval","setInterval","clearInterval","col","subTitle","browserTitle","p","reduce","sum","current","drive","company_template","UpdateClientLicenses","license","updateClientLicenses","_licenseChange","licensesList","filter","licenza","includes","classe","codice","_assignLicense","idx","option","hidden","tipologia","selectedValue","AddLicense","addLicense","RemoveLicense","removeLicense","CompanyTemplateLicenze","selectedLicense","licenzeShallow","_onSelect","Row","emptyRecordMsg","hidePlaceholder","closeIcon","selectedValues","onSelect","selectedList","selectedItem","onRemove","removedItem","displayValue","JSON","stringify","toUpperCase","company_data","ragione_sociale","n_sedi","UpdateCompanyData","updateCompanyData","UpdateListaSedi","FixSedi","tmp_client","emailLogin","emailLogin2","pswLogin","sedeDaCancellare","emailAlert","ragioneSociale","_editCompanyData","token1","clickServiceAggiungi","_inserimentoSede","Promise","myResolve","myReject","clickServiceCancella","preventDefault","_cancellazioneSede","handleEmailLogin","handleEmailLogin2","handlePswLogin","handleRimuoviSede","aria-describedby","chiave","licenze","tipologie","id_tipologia","selectState","setSelectState","tipologiaChange","licenzaChange","sedeChange","updateMonitora","_updateMonitoraAllServices","index","nome_sede","nome_operazione","_updateMonitoraAllAlerts","tipologia_alert","mailInterval","fixedRate","stopTimer","stopInterval","for","setChilds","interval","getClientHandler","response1","_getAllNomiAlertConfigurazione","response2","nomi_servizi","tipologie_alert","intestazione","field","last_mail_date","category_vs_place","Toggle","actual_state","event","Item","Sidebar","UpdateCompanyOverview","n_errori","n_ok","n_warning","updateCompanyOverview","UpdateCompanyHistory","updateCompanyHistory","GetLastMailDateAndTime","getLastMailDate","_getLastMailDateAndTime","last_mail_date_and_time","_getCompanyOverview","listId","listClients","id_sede","to","tipo_client","client_overview","Login","LoginWithPlacesCategories","places_list","categories_list","chiaveRegistrazione","categoriesList","placesList","LoginController","psw","password","encryptedPsw","_performLogin","_getClientTypes","_getNSedi","nsedi","getElementsByTagName","click","item","SignUp","signUp","emailSignUp","pswSignUp","emailAlertSignUp","ragioneSocialeSignUp","SignUpController","email_alert","_performSignUp","UnsubscribeAlertMessage","unsubscribeParams","setUnsubscribeParams","requestResponse","setRequestResponse","parameters","location","search","get","_unsubscribeAlert","border","cellpadding","cellspacing","toLowerCase","align","Date","toUTCString","RichiediPassword","ChangePassword","nuovaPassword","confermaPassword","isTokenValid","setIsTokenValid","_isTokenValid","_cambioPassword","Searchbar","searched_client","Search","client_name","pathname","homeTo","titleShort","theme","sidebar","includeButton","categoriesIcons","lastComponent","o","category","getSidebarByType","licenses_list","getSidebarByLicense","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","perc_free","total_size_GB","occupied_GB","free_GB","ultimo_aggiornamento","rootReducer","Object","assign","persistConfig","key","storage","blacklist","pReducer","persistReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","Fragment","getElementById","buildurl","url_lista_servizi","url_lista_tipo_dispositivi","url_lista_licenze","url_deep_licenze","buildurlFake","url_signupFake","url_lista_tipo_dispositiviFake","url_lista_licenzeFake"],"mappings":"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","file":"static/js/main.e2789db6.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, useModal, ModalTransition } from 'react-simple-hook-modal';\r\nimport { Col, Box } from 'adminlte-2-react';\r\nimport { Accordion } from 'react-bootstrap';\r\n\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({});\r\n\r\nconst PopUp = (props) => {\r\n\r\n  const { isModalOpen, openModal, closeModal } = useModal();\r\n  \r\n  const launchAction = () => {\r\n    return () => {\r\n      openModal();\r\n      props.action();\r\n      setTimeout(function(){ \r\n        try {\r\n          let testModal = document.getElementsByClassName(\"modalWrapper\")[0]\r\n          if(testModal != undefined) \r\n            document.getElementsByClassName(\"modalWrapper\")[0].style.marginTop = parseInt(window.scrollY)+\"px\";\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }, 100);\r\n      window.onscroll = function (e) {\r\n        var vertical_position = 0;\r\n        if (window.pageYOffset)//usual\r\n          vertical_position = window.pageYOffset;\r\n        else if (document.documentElement.clientHeight)//ie\r\n          vertical_position = document.documentElement.scrollTop;\r\n        else if (document.body)//ie quirks\r\n          vertical_position = document.body.scrollTop;\r\n        try {\r\n          let testModal1 = document.getElementsByClassName(\"modalWrapper\")[0]\r\n          if(testModal1 != undefined) \r\n            document.getElementsByClassName(\"modalWrapper\")[0].style.marginTop = parseInt(window.scrollY)+\"px\";\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }      \r\n    };\r\n  }\r\n  return (\r\n    <>\r\n      {props.messageLink==null ? <a onClick={launchAction()} className={props.linkClass}>Altro <FontAwesomeIcon icon={[\"fas\", \"arrow-circle-right\"]} /></a>\r\n      : <a onClick={launchAction()} className={props.linkClass}>{props.messageLink}</a>\r\n      }\r\n      <Modal\r\n        id=\"any-unique-identifier\"\r\n        isOpen={isModalOpen}\r\n        transition={ModalTransition.SCALE}\r\n      >\r\n        <div className=\"modalWrapper\">\r\n          <Box title={props.title} style={{\"marginBottom\": \"0px !important\"}} type=\"primary\" footer={<a onClick={closeModal} className=\"clickable\">Chiudi</a>}>\r\n            <Col className=\"col-md-12 col-xs-12\">\r\n              <Accordion>\r\n                {props.childs.length==0 ? <p>Nessun dato trovato.</p> : props.childs.map((child, i) => (<div key={i}>{child}</div>))}\r\n              </Accordion>\r\n            </Col>\r\n          </Box>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(PopUp);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Col } from 'adminlte-2-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PopUp from './PopUp';\r\n\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({});\r\n\r\nconst TrafficLightButtons = (props) => {\r\n  return (\r\n    <div>\r\n      <Col xs={props.size}>\r\n        <div className=\"small-box bg-red\">\r\n          <div className=\"inner\">\r\n            <h3>{props.problems}</h3>\r\n            <p>{props.titles[0]}</p>\r\n          </div>\r\n          <div className=\"icon\">\r\n            <FontAwesomeIcon icon={[\"fas\", \"times-circle\"]} />\r\n          </div>\r\n          <span href=\"#\" className=\"small-box-footer\">\r\n            {(props.isHome == false) \r\n            ? \r\n              <PopUp title=\"Problemi\" linkClass={\"whiteLink\"} childs={props.popUpChildsProblemi} action={()=>(console.log(\"action\"))}/>\r\n            :\r\n              <PopUp title=\"Problemi\" linkClass={\"whiteLink\"} childs={props.idClientsProblemi} action={()=>(console.log(\"action\"))}/>\r\n            }\r\n            \r\n          </span>\r\n        </div>\r\n      </Col>\r\n      <Col xs={props.size}>\r\n        <div className=\"small-box bg-yellow\">\r\n          <div className=\"inner\">\r\n            <h3>{props.warnings}</h3>\r\n            <p>{props.titles[1]}</p>\r\n          </div>\r\n          <div className=\"icon\">\r\n            <FontAwesomeIcon icon={[\"fas\", \"exclamation-circle\"]} />\r\n          </div>\r\n          <span href=\"#\" className=\"small-box-footer\">\r\n            {\r\n              (props.isHome == false)\r\n              ?\r\n              <PopUp title=\"Warnings\" linkClass={\"whiteLink\"} childs={props.popUpChildsWarnings} action={()=>(console.log(\"action\"))}/>\r\n              :\r\n              <PopUp title=\"Warnings\" linkClass={\"whiteLink\"} childs={props.idClientsWarnings} action={()=>(console.log(\"action\"))}/>\r\n            }\r\n            \r\n          </span>\r\n        </div>\r\n      </Col>\r\n      <Col xs={props.size}>\r\n        <div className=\"small-box bg-green\">\r\n          <div className=\"inner\">\r\n            <h3>{props.running}</h3>\r\n            <p>{props.titles[2]}</p>\r\n          </div>\r\n          <div className=\"icon\">\r\n            <FontAwesomeIcon icon={[\"fas\", \"play-circle\"]} />\r\n          </div>\r\n          <span href=\"#\" className=\"small-box-footer\">\r\n            <h2></h2>\r\n          </span>\r\n        </div>\r\n      </Col>\r\n    </div>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(TrafficLightButtons);","export const LOGIN = \"LOGIN\";\r\nexport const SIGNUP = \"SIGNUP\";\r\nexport const ADDLICENSE = \"ADDLICENSE\";\r\nexport const REMOVELICENSE = \"REMOVELICENSE\";\r\nexport const SEARCHCLIENT = \"SEARCHCLIENT\";\r\nexport const PLACESLIST = \"PLACESLIST\";\r\nexport const CATEGORIESLIST = \"CATEGORIESLIST\";\r\nexport const CATEGORYVSPLACE = \"CATEGORYVSPLACE\";\r\nexport const SERVICESLIST = \"SERVICESLIST\";\r\nexport const EVENTSLIST = \"EVENTSLIST\";\r\nexport const UPDATECOMPANYDATA = \"UPDATECOMPANYDATA\";\r\nexport const SERVIZIOVERVIEW = \"SERVIZIOVERVIEW\";\r\nexport const LISTANOMISEDI = \"LISTANOMISEDI\";\r\nexport const UPDATESIDEBAR = \"UPDATESIDEBAR\";\r\nexport const CLIENTTEMPLATEWINDOWSSERVICES = \"CLIENTTEMPLATEWINDOWSSERVICES\";\r\nexport const CLIENTTEMPLATEWINDOWSEVENTS = \"CLIENTTEMPLATEWINDOWSEVENTS\";\r\nexport const CLIENTTEMPLATEINFO = \"CLIENTTEMPLATEINFO\";\r\nexport const CLIENTTEMPLATEDRIVES = \"CLIENTTEMPLATEDRIVES\";\r\nexport const CLIENTTEMPLATEALERT = \"CLIENTTEMPLATEALERT\";\r\nexport const CLIENTTEMPLATEHISTORY = \"CLIENTTEMPLATEHISTORY\";\r\nexport const CLIENTTEMPLATEOVERVIEW = \"CLIENTTEMPLATEOVERVIEW\";\r\nexport const CLIENTTEMPLATERESET = \"CLIENTTEMPLATERESET\";\r\nexport const COMPANYTEMPLATELICENZE = \"COMPANYTEMPLATELICENZE\";\r\nexport const UPDATECLIENTOVERVIEW = \"UPDATECLIENTOVERVIEW\";\r\nexport const UPDATECOMPANYOVERVIEW = \"UPDATECOMPANYOVERVIEW\";\r\nexport const FIXSEDI = \"FIXSEDI\";\r\nexport const UPDATECLIENTHISTORY = \"UPDATECLIENTHISTORY\";\r\nexport const UPDATECOMPANYHISTORY = \"UPDATECOMPANYHISTORY\";\r\nexport const UPDATECLIENTLICENSES = \"UPDATECLIENTLICENSES\";\r\nexport const TOTALRESET = \"TOTALRESET\";\r\nexport const UPDATETOKEN = \"UPDATETOKEN\";\r\nexport const GETCONFIGURAZIONEALERT = \"GETCONFIGURAZIONEALERT\";\r\nexport const GETLASTDATE = \"GETLASTDATE\";\r\nexport const GETLASTMAILDATE = \"GETLASTMAILDATE\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ActionType } from 'react-hot-toast';\r\nimport * as types from './ActionTypes';\r\n\r\nexport const login = (nome_company, id_company, email, emailNotify, client_list, token, lista_sedi, chiave_di_registrazione, listaNomiSedi, listaIdSedi) => ({\r\n  type: types.LOGIN,\r\n  id_company: id_company,\r\n  nome_company: nome_company,\r\n  email: email,\r\n  emailNotify: emailNotify,\r\n  client_list: client_list,\r\n  token: token, \r\n  lista_sedi: lista_sedi,\r\n  chiave_di_registrazione: chiave_di_registrazione,\r\n  listaNomiSedi: listaNomiSedi,\r\n  listaIdSedi: listaIdSedi\r\n})\r\nexport const updateCompanyData = (nome_company, email, emailNotify, token) => ({\r\n  type: types.UPDATECOMPANYDATA,\r\n  nome_company: nome_company,\r\n  email: email,\r\n  emailNotify: emailNotify,\r\n  token: token\r\n})\r\nexport const signUp = (message, messageCode) => ({\r\n  type: types.SIGNUP,\r\n  message: message,\r\n  messageCode: messageCode\r\n})\r\nexport const addLicense = (license) => ({\r\n  type: types.ADDLICENSE,\r\n  license: license\r\n})\r\nexport const removeLicense = (license) => ({\r\n  type: types.REMOVELICENSE,\r\n  license: license\r\n})\r\nexport const searchClient = (client_name) => ({\r\n  type: types.SEARCHCLIENT,\r\n  client_name: client_name\r\n})\r\nexport const placesList = (places_list) => ({\r\n  type: types.PLACESLIST,\r\n  places_list: places_list\r\n})\r\nexport const categoriesList = (categories_list) => ({\r\n  type: types.CATEGORIESLIST,\r\n  categories_list: categories_list\r\n})\r\nexport const servicesList = (servicesList) => ({\r\n  type: types.SERVICESLIST,\r\n  servicesList: servicesList\r\n})\r\nexport const eventsList = (eventsList) => ({\r\n  type: types.EVENTSLIST,\r\n  eventsList: eventsList\r\n})\r\nexport const serviziOverview = (n_totali, n_running, n_stop, n_monitorati) => ({\r\n  type: types.SERVIZIOVERVIEW,\r\n  n_totali: n_totali,\r\n  n_running: n_running,\r\n  n_stop: n_stop,\r\n  n_monitorati: n_monitorati\r\n})\r\n\r\nexport const listaNomiSedi = (listaNomi, token, listaId) => ({\r\n  type: types.LISTANOMISEDI,\r\n  listaNomi: listaNomi,\r\n  token: token,\r\n  listaId: listaId\r\n  //tmp_list: tmp_list\r\n})\r\n\r\nexport const updateSidebar = (elencoClients,sedi, token, listaNomi, listaSedi) => ({\r\n  type: types.UPDATESIDEBAR,\r\n  clientList: elencoClients,\r\n  token: token,\r\n  sedi: sedi,\r\n  listaNomi: listaNomi,\r\n  listaSedi: listaSedi\r\n})\r\n\r\nexport const updateCTcategoryVsPlace = (toggle) => ({\r\n  type: types.CATEGORYVSPLACE,\r\n  category_vs_place: toggle\r\n})\r\n\r\nexport const updateCTWindowsEvents = (n_problemi, n_warnings) => ({\r\n  type: types.CLIENTTEMPLATEWINDOWSEVENTS,\r\n  windows_events: {\r\n    n_problemi: n_problemi,\r\n    n_warnings: n_warnings\r\n  }\r\n})\r\n\r\nexport const updateCTWindowsServices = ( n_totali, n_running, n_stop, n_monitorati) => ({\r\n  type: types.CLIENTTEMPLATEWINDOWSSERVICES,\r\n  windows_services: {\r\n    n_monitorati: n_monitorati,\r\n    n_esecuzione: n_running,\r\n    n_stop: n_stop,\r\n    n_totali: n_totali\r\n  }\r\n  \r\n})\r\n\r\nexport const updateCTInfo = (info) => ({\r\n  type: types.CLIENTTEMPLATEINFO,\r\n  info: info\r\n  \r\n})\r\n\r\nexport const updateCTAlert = (alert) => ({\r\n  type: types.CLIENTTEMPLATEALERT,\r\n  alert: alert\r\n})\r\n\r\nexport const resetClientTemplate = () => ({\r\n  type: types.CLIENTTEMPLATERESET\r\n})\r\n\r\nexport const updateCompanyTemplateLicenze = (lista_licenze) => ({\r\n  type: types.COMPANYTEMPLATELICENZE,\r\n  lista_licenze: lista_licenze\r\n})\r\n\r\nexport const updateClientOverview = (n_errori,n_warnings,n_ok) => ({\r\n  type: types.UPDATECLIENTOVERVIEW,\r\n    overview: {\r\n      problemi: n_errori,\r\n      warnings: n_warnings,\r\n      ok: n_ok\r\n  }\r\n})\r\n\r\nexport const updateCompanyOverview = (n_errori, n_warning, n_ok) => ({\r\n  type: types.UPDATECOMPANYOVERVIEW,\r\n    overview: {\r\n      n_errori: n_errori,\r\n      n_running: n_ok,\r\n      n_warnings: n_warning\r\n  }\r\n})\r\n\r\nexport const fixSedi = (lista_client) => ({\r\n  type: types.FIXSEDI,\r\n  lista_client: lista_client\r\n})\r\n\r\nexport const updateClientHistory = (history_data) => ({\r\n  type: types.UPDATECLIENTHISTORY,\r\n  history_data: history_data\r\n})\r\n\r\nexport const updateCompanyHistory = (history_data) => ({\r\n  type: types.UPDATECOMPANYHISTORY,\r\n  history_data: history_data\r\n})\r\n\r\nexport const updateClientLicenses = (license, id_client) => ({\r\n  type: types.UPDATECLIENTLICENSES,\r\n  license: license,\r\n  id_client: id_client\r\n})\r\n\r\nexport const totalReset = () => ({\r\n  type: types.TOTALRESET,\r\n})\r\n\r\nexport const updateToken = (token) => ({\r\n  type: types.UPDATETOKEN,\r\n  token: token\r\n})\r\n\r\nexport const getConfigurazioneAlert = (list) => ({\r\n  type: types.GETCONFIGURAZIONEALERT,\r\n  operazioni: list\r\n})\r\n\r\nexport const getLastDate = (date) => ({\r\n  type: types.GETLASTDATE,\r\n  date: date\r\n})\r\n\r\nexport const getLastMailDate = (last_mail_date) => ({\r\n  type: types.GETLASTMAILDATE,\r\n  last_mail_date: last_mail_date\r\n})","export const _LICENZE = {\r\n    SISTEMA_OPERATIVO : {\r\n        tipo : \"1\",\r\n        label : \"Sistema operativo\"\r\n    },\r\n    BACKUP : {\r\n        tipo : \"2\",\r\n        label : \"Backup\"\r\n    },\r\n    ANTIVIRUS : {\r\n        tipo : \"3\",\r\n        label : \"Antivirus\"\r\n    },\r\n    RETE : {\r\n        tipo : \"4\",\r\n        label : \"Rete\"\r\n    },\r\n    VULNERABILITA : {\r\n        tipo : \"5\",\r\n        label : \"Vulnerabilita\\'\"\r\n    }\r\n}\r\n\r\nexport const _FILTERS = {\r\n    PLACE : \"1\",\r\n    CATEGORY : \"2\",\r\n    CLIENT_TYPE : \"3\"\r\n}\r\n\r\nexport const _MSGCODE = {\r\n    NO_ERR : \"0\",\r\n    ERR : \"1\",\r\n    AUTENTICAZIONE_FALLITA: \"-2\"\r\n}\r\n\r\nexport const _ALERTCATEGORY = [\r\n    \"\",\"DRIVE\",\"SERVIZI WINDOWS\", \"EVENTI WINDOWS\"\r\n]\r\n\r\nexport const defaultUpperBound = 20;\r\nexport const defaultSlot = 1;\r\nexport const defaultDaysAlert = 10;\r\nexport const defaultSettimaneAlert = 1;\r\nexport const defaultUpdateInterval = 60000;","import { totalReset } from \"./ActionCreator\";\r\nimport { _LICENZE, _MSGCODE } from \"./Constants\";\r\n\r\nexport const Backend2FrontendDateConverter = (bcknd_date) => {\r\n  let frtnd_date = bcknd_date;\r\n  if(bcknd_date.indexOf(\".\") != -1){\r\n    frtnd_date = bcknd_date.substring(0,bcknd_date.indexOf(\".\"));\r\n  }\r\n  if(bcknd_date.indexOf(\"T\") != -1){\r\n    frtnd_date = frtnd_date.replace(\"T\", \" \")\r\n  }\r\n  return frtnd_date;\r\n}\r\n\r\nexport const nomeToIdSede = (nome, listaNomi, listaId) => {\r\n  for(let i=0; i<listaNomi.length; i++){\r\n    if(listaNomi[i] == nome)\r\n      return listaId[i];\r\n  }\r\n}\r\n\r\nexport const idToNomeSede = (id, listaNomi, listaId) => {\r\n  for(let i=0; i<listaId.length; i++){\r\n    if(listaId[i] == id)\r\n      return listaNomi[i];\r\n  }\r\n}\r\n\r\nexport const idToNomeLicenza = (id) => {\r\n  switch (String(id)) {\r\n    case _LICENZE.SISTEMA_OPERATIVO.tipo:\r\n      return _LICENZE.SISTEMA_OPERATIVO.label\r\n    case _LICENZE.BACKUP.tipo:\r\n      return _LICENZE.BACKUP.label\r\n    case _LICENZE.RETE.tipo:\r\n      return _LICENZE.RETE.label\r\n    case _LICENZE.VULNERABILITA.tipo:\r\n      return _LICENZE.VULNERABILITA.label\r\n    case _LICENZE.ANTIVIRUS.tipo:\r\n      return _LICENZE.ANTIVIRUS.label\r\n  }\r\n}\r\n\r\nexport const sortResults = (prop, asc, list) => {\r\n  list.sort(function(a, b) {\r\n      if (asc) {\r\n          return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);\r\n      } else {\r\n          return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);\r\n      }\r\n  });\r\n}\r\n\r\nexport const autenticazione_fallita = (msgCode) => {\r\n  if((msgCode == _MSGCODE.AUTENTICAZIONE_FALLITA) || (String(msgCode) == String(_MSGCODE.AUTENTICAZIONE_FALLITA))) {\r\n    // console.log(true)\r\n    // console.log(msgCode)\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const renewToken = (oldToken, newToken) => {\r\n  if(newToken != null && oldToken != newToken)\r\n    return true;\r\n  return false;\r\n}\r\n\r\nexport const Backend2FrontendAlertConverter = (backend_alert) => {\r\n    let frontend_alert;\r\n    switch(backend_alert) {\r\n      case \"WINDOWS_SERVICES\":\r\n        frontend_alert = \"Servizi di Windows\"\r\n        break;\r\n      case \"WINDOWS_EVENTS\":\r\n        frontend_alert = \"Eventi di Windows\"\r\n        break;\r\n      case \"DRIVES\":\r\n        frontend_alert = \"Drives\"\r\n        break;\r\n      default:\r\n        frontend_alert = backend_alert\r\n    }\r\n    return frontend_alert;\r\n}","import { defaultDaysAlert, defaultSettimaneAlert, defaultSlot, defaultUpperBound } from \"./Constants.js\";\r\nconst { url_login, url_get_nomi_sedi, url_lista_sediFake, url_lista_gruppiFake, url_signup, url_deep_clientFake, url_loginFake, url_edit_company_dataFake, url_edit_company_data, url_shallow_licenze, url_get_servizi_monitoratiFake, url_get_servizi_allFake, url_get_servizi_overviewFake, url_get_eventi_overviewFake, url_get_eventiFake, url_get_servizi_overview, url_shallow_licenzeFake, url_get_servizi_allFake2, url_get_servizi_monitoratiFake2, url_get_servizi_all, url_get_servizi_monitorati, url_modifica_monitoraggio_servizio, url_get_eventi, url_get_eventi_overview, url_lista_sedi, url_lista_gruppi, url_deep_client, url_shallow_clients, url_modifica_sede, url_get_drives, url_get_n_sediFake, url_get_n_sedi, url_inserimento_sede, url_cancellazione_sede, url_get_latest_alert, url_compra_licenza, url_get_client_overview, url_get_client_overview_drives, url_get_client_overview_services, url_get_client_overview_events, url_get_company_overview, url_get_client_history, url_get_company_history, url_assign_license, url_modifica_monitoraggio_alert, url_get_monitoraggio_alert, url_update_monitoraggio_alert, url_get_last_date, url_get_all_services_of_company, url_get_all_nomi_alert_configurazione, url_update_monitora_all_services, url_update_monitora_all_alerts, url_unsubscribe_alert, url_change_mail_interval, url_get_mail_interval, url_richiedi_password, url_cambio_password, url_is_token_valid, url_get_last_mail_date_and_time } = require('./REST');\r\nconst axios = require('axios');\r\nvar md5 = require('md5');\r\n\r\nexport const _performSignUp = (email, password, email_alert, ragione_sociale) => {\r\n  let encryptedPsw = md5(password);\r\n  return axios.post(url_signup, {\r\n    email: email,\r\n    password: encryptedPsw,\r\n    email_alert: email_alert,\r\n    ragione_sociale: ragione_sociale\r\n  })\r\n}\r\n\r\nexport const _performLogin = (email, password) => {\r\n    let encryptedPsw = md5(password);\r\n    return axios.post(url_login, {\r\n      email: email,\r\n      password: encryptedPsw\r\n    })\r\n}\r\n\r\nexport const _getPlaces = (user, token) => {\r\n  return axios.post(url_lista_sedi, {\r\n    token: token,\r\n    id_company: user\r\n  })\r\n}\r\n\r\nexport const _getClientTypes = (user, token) => {\r\n  return axios.post(url_lista_gruppi, {\r\n    token: token,\r\n    id_company: user\r\n  })\r\n}\r\n\r\nexport const _getLicenzeShallow = (id, token) => {\r\n  return axios.post(url_shallow_licenze, {\r\n    token: token,\r\n    id_company: id\r\n  })\r\n}\r\n\r\nexport const _getDeepClient = (id_client, id_company, token) => {\r\n  return axios.post(url_deep_client, {\r\n    id_client: String(id_client),\r\n    id_company: String(id_company),\r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getShallowClients = (id_company, token) => {\r\n  return axios.post(url_shallow_clients, {\r\n    id_company: String(id_company),\r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _editCompanyData = (id_company, token, email, emailAlert, ragioneSociale) => {\r\n  return axios.post(url_edit_company_data, {\r\n    id_company: id_company, \r\n    token: token, \r\n    email: email, \r\n    emailAlert: emailAlert, \r\n    ragioneSociale: ragioneSociale\r\n  })\r\n}\r\n\r\nexport const _getServiziMonitorati = (token, id_client) => {\r\n  return axios.post(url_get_servizi_monitorati, {\r\n    id_client: String(id_client), \r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getServiziAll = (token, id_client) => {\r\n  return axios.post(url_get_servizi_all, {\r\n    id_client: String(id_client), \r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getEventi = (token, id_client, sottocategoria=\"*\", slot=defaultSlot, n=defaultUpperBound) => {\r\n  return axios.post(url_get_eventi, {\r\n    id_client: String(id_client), \r\n    token: token,\r\n    sottocategoria: sottocategoria,\r\n    slot: String(slot),\r\n    n: String(n)\r\n  })\r\n}\r\n\r\nexport const _getServiziOverview = (token, id_client) => {\r\n  return axios.post(url_get_servizi_overview, {\r\n    id_client: String(id_client), \r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getNSedi = (token, id_company) => {\r\n  return axios.post(url_get_n_sedi, {\r\n    id_company: String(id_company), \r\n    token: token\r\n  })\r\n}\r\n\r\n\r\nexport const _getEventiOverview = (token, id_client) => {\r\n  return axios.post(url_get_eventi_overview, {\r\n    id_client: String(id_client), \r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _modificaMonitoraggioServizio = (token, nome_servizio, id_client, monitora) => {\r\n  return axios.post(url_modifica_monitoraggio_servizio, {\r\n    id_client: String(id_client), \r\n    token: token,\r\n    nome_servizio: nome_servizio,\r\n    monitora: monitora\r\n  })\r\n}\r\n\r\nexport const _modificaMonitoraggioAlert = (token, nome_operazione, id_client, monitora) => {\r\n  return axios.post(url_modifica_monitoraggio_alert, {\r\n    id_client: String(id_client), \r\n    token: token,\r\n    nome_operazione: nome_operazione,\r\n    monitora: monitora\r\n  })\r\n}\r\n\r\nexport const _getMonitoraggioAlert = (token, id_client) => {\r\n  return axios.post(url_get_monitoraggio_alert, {\r\n    id_client: String(id_client), \r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _updateMonitoraggioAlert = (token, id_client, monitora, operazione) => {\r\n  return axios.post(url_update_monitoraggio_alert, {\r\n    id_client: String(id_client), \r\n    token: token,\r\n    monitora: monitora,\r\n    operazione: operazione\r\n  })\r\n}\r\n\r\nexport const _modificaSedeClient = (token, id_client, id_company, nuovaSede, vecchiaSede) => {\r\n  return axios.post(url_modifica_sede, {\r\n    id_client: String(id_client), \r\n    token: token,\r\n    id_company: String(id_company), \r\n    nuovaSede: nuovaSede,\r\n    vecchiaSede: vecchiaSede\r\n  })\r\n}\r\n\r\nexport const _getDrives = (token, id_client) => {\r\n  return axios.post(url_get_drives, {\r\n    id_client: String(id_client), \r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _inserimentoSede = (token, id_company, nome) => {\r\n  return axios.post(url_inserimento_sede, {\r\n    id_company: String(id_company), \r\n    nome: nome,\r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getNomiSedi = (token, id_company) => {\r\n  return axios.post(url_get_nomi_sedi, {\r\n    id_company: String(id_company),\r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _cancellazioneSede = (token, id_company, nome) => {\r\n  return axios.post(url_cancellazione_sede, {\r\n    id_company: String(id_company), \r\n    nome: nome,\r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getLatestAlerts = (token, id_client, n_settimane = defaultSettimaneAlert) => {\r\n  return axios.post(url_get_latest_alert, {\r\n    id_client: String(id_client), \r\n    n_settimane: String(n_settimane),\r\n    token: token,\r\n  })\r\n}\r\n\r\nexport const _compraLicenza = (token, id_company, classe_licenza) => {\r\n  return axios.post(url_compra_licenza, {\r\n    id_company: String(id_company), \r\n    classe_licenza: String(classe_licenza),\r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getClientOverview = async (token, id_client) => {\r\n  let response;\r\n\r\n  const res_services = await axios.post(url_get_client_overview_services, {\r\n    id_client: String(id_client), \r\n    token: token\r\n  })\r\n\r\n  return response = {\r\n    errori: [res_services.data.servicesResponse.errori,  res_services.data.eventiResponse.errori,  res_services.data.drivesResponse.errori],\r\n    warnings:  [res_services.data.servicesResponse.warning,  res_services.data.eventiResponse.warning,  res_services.data.drivesResponse.warning],\r\n    ok:  [res_services.data.servicesResponse.ok, 0, res_services.data.drivesResponse.ok]\r\n  } \r\n}\r\n\r\nexport const _getCompanyOverview = (token, id_company) => {\r\n  return axios.post(url_get_company_overview, {\r\n    id_company: String(id_company), \r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getClientHistory = async(token, id_client, slot=defaultDaysAlert) => {\r\n  const response = await axios.post(url_get_client_history, {\r\n    id_client: String(id_client), \r\n    token: token,\r\n    slot: String(slot)\r\n  })\r\n\r\n  let res = {\r\n    xaxis: [],\r\n    problems: [],\r\n    warnings: []\r\n  }\r\n\r\n  response.data.history.forEach(el => {\r\n    res.xaxis.push(el.date);\r\n    res.problems.push(el.errors);\r\n    res.warnings.push(el.warnings);\r\n  });\r\n  \r\n  res.last_update = response.data.last_update;\r\n\r\n  return res;\r\n}\r\n\r\nexport const _getCompanyHistory = async(token, id_company, slot=defaultDaysAlert) => {\r\n  const response = await axios.post(url_get_company_history, {\r\n    id_company: String(id_company), \r\n    token: token,\r\n    slot: String(slot)\r\n  })\r\n\r\n  let res = {\r\n    xaxis: [],\r\n    problems: [],\r\n    warnings: [],\r\n    last_update: \"\"\r\n  }\r\n\r\n  response.data.history.forEach(el => {\r\n    res.xaxis.push(el.date);\r\n    res.problems.push(el.errors);\r\n    res.warnings.push(el.warnings);\r\n  });\r\n\r\n  res.last_update = response.data.last_update;\r\n\r\n  return res;\r\n}\r\n\r\nexport const _assignLicenze = (id_client,token,codice,id_company) => {\r\n  return axios.post(url_assign_license, {\r\n    id_client: String(id_client),\r\n    token: token,\r\n    codice: codice,\r\n    id_company: String(id_company),\r\n  })\r\n}\r\n\r\nexport const _getLastDate = (id_client,token) => {\r\n  return axios.post(url_get_last_date, {\r\n    id_client: String(id_client),\r\n    token: token,\r\n  })\r\n}\r\n\r\nexport const _getAllServicesOfCompany = (id_company,token) => {\r\n  return axios.post(url_get_all_services_of_company, {\r\n    id_company: String(id_company),\r\n    token: token,\r\n  })\r\n}\r\n\r\nexport const _getAllNomiAlertConfigurazione = (id_company,token) => {\r\n  return axios.post(url_get_all_nomi_alert_configurazione, {\r\n    id_company: String(id_company),\r\n    token: token,\r\n  })\r\n}\r\n\r\nexport const _updateMonitoraAllServices = (id_company,token,tipologia,licenza,sede,nome_servizio,monitora) => {\r\n  return axios.post(url_update_monitora_all_services, {\r\n    id_company: String(id_company),\r\n    token: token,\r\n    tipologia: tipologia,\r\n    licenza: licenza,\r\n    sede: sede,\r\n    nome_servizio: nome_servizio,\r\n    monitora: monitora\r\n  })\r\n}\r\n\r\nexport const _updateMonitoraAllAlerts = (id_company,token,tipologia,licenza,sede,nome_operazione,monitora) => {\r\n  return axios.post(url_update_monitora_all_alerts, {\r\n    id_company: String(id_company),\r\n    token: token,\r\n    tipologia: tipologia,\r\n    licenza: licenza,\r\n    sede: sede,\r\n    nome_operazione: nome_operazione,\r\n    monitora: monitora\r\n  })\r\n}\r\n\r\nexport const _unsubscribeAlert = (token,tipologia_alert,id_client) => {\r\n  return axios.get(url_unsubscribe_alert + \"?token=\" + token + \"&tipologia_alert=\" + tipologia_alert + \"&id_client=\" + id_client)\r\n}\r\n\r\nexport const _changeMailInterval = (token,fixedRate, id_company, stopTimer) => {\r\n  return axios.post(url_change_mail_interval, {\r\n    id_company: String(id_company),\r\n    token: token,\r\n    fixedRate: fixedRate,\r\n    stopTimer: stopTimer\r\n  })\r\n}\r\n\r\nexport const _getMailInterval = (token, id_company) => {\r\n  return axios.post(url_get_mail_interval, {\r\n    id_company: String(id_company),\r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _richiediPassword = (email) => {\r\n  return axios.post(url_richiedi_password, {\r\n    email: email\r\n  })\r\n}\r\n\r\nexport const _cambioPassword = (token, id_company, password) => {\r\n  return axios.post(url_cambio_password, {\r\n    token: token,\r\n    password: md5(password),\r\n    id_company: String(id_company)\r\n  })\r\n}\r\n\r\nexport const _isTokenValid = (token) => {\r\n  return axios.post(url_is_token_valid, {\r\n    token: token\r\n  })\r\n}\r\n\r\nexport const _getLastMailDateAndTime = (token, id_company) => {\r\n  return axios.post(url_get_last_mail_date_and_time, {\r\n    token: token,\r\n    id_company: String(id_company)\r\n  })\r\n}\r\n","import toast, { Toaster } from 'react-hot-toast';\r\n\r\nlet options = {\r\n  className: '',\r\n  style: {\r\n    \"marginTop\": \"5px\",\r\n    \"marginRight\": \"5px\"\r\n  },\r\n}\r\n\r\nexport const toaster = <Toaster toastOptions={options} position=\"top-right\" reverseOrder={false}/>\r\n\r\nconst randomID = () => {\r\n  return Math.floor(Math.random() * 10000) + 1;\r\n}\r\n\r\nexport const getSuccessToast = (message) => {\r\n  toast.success(message, {id: randomID()})\r\n}\r\n\r\nexport const getErrorToast = (message) => {\r\n  toast.error(message, {id: randomID()})\r\n}\r\n\r\nexport const getLoadingToast = (message) => {\r\n  toast.loading(message, {id: randomID()})\r\n}\r\n\r\nexport const stopLoadingToast = (toastToDismiss) => {\r\n  toast.dismiss(toastToDismiss);\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Box } from 'adminlte-2-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Backend2FrontendAlertConverter, Backend2FrontendDateConverter } from '../Tools';\r\nimport { defaultSettimaneAlert, _ALERTCATEGORY } from '../Constants';\r\nimport PopUp from './PopUp';\r\nimport { _getLatestAlerts, _getMonitoraggioAlert, _updateMonitoraggioAlert } from '../callableRESTs';\r\nimport { getConfigurazioneAlert, updateCTAlert } from '../ActionCreator';\r\nimport { Col } from 'react-bootstrap';\r\nimport { getLoadingToast, stopLoadingToast, getErrorToast } from '../toastManager';\r\n\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n  GetConfigurazioneAlert: (list) => {\r\n    dispatch(getConfigurazioneAlert(list));\r\n  },\r\n  ClientTemplateAlert: (alerts) => {\r\n    dispatch(updateCTAlert(alerts));\r\n  }\r\n});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n  client_template: state.client_template,\r\n  token: state.token,\r\n  configurazione_alert: state.configurazione_alert\r\n});\r\n\r\nconst Communications = (props) => {\r\n\r\n  const isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\n  const [state, setState] = React.useState({\r\n    error_icon: <FontAwesomeIcon icon={[\"fas\", \"times-circle\"]} size=\"3x\" color=\"#dd4b39\"/>,\r\n    warning_icon: <FontAwesomeIcon icon={[\"fas\", \"exclamation-circle\"]} size=\"3x\" color=\"#f39c12\"/>,\r\n    success_icon: <FontAwesomeIcon icon={[\"fas\", \"check-circle\"]} size=\"3x\" color=\"#00a65a\"/>\r\n  })\r\n\r\n  const getChilds = () => {\r\n    const loadingToast = getLoadingToast(\"Attendere...\")\r\n    _getMonitoraggioAlert( props.token, props.id_client)\r\n    .then( response => {\r\n      props.GetConfigurazioneAlert(renderChilds(response.data.listaOperazioni));\r\n      stopLoadingToast(loadingToast);\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    })\r\n  }\r\n\r\n  const renderChilds = (listaOperazioni) => {\r\n    let listaChildren = [];\r\n      if(listaOperazioni.length > 0)\r\n        listaChildren.push(<><Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><h5><strong>MONITORA</strong></h5></Col><Col className=\"oddColor vertical-aligner col-md-10 col-xs-10\"><h5><strong>OPERAZIONE</strong></h5></Col></>)\r\n      listaOperazioni.forEach( (operazione,i) => {\r\n        listaChildren.push(\r\n          (operazione.monitora)\r\n          ?\r\n            (isOdd(i))\r\n            ?\r\n              <>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                  <input type=\"checkbox\" defaultChecked=\"checked\" onChange={(e) => toggleMonitora(e,operazione.operazione)}/>\r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-10 col-xs-10\">\r\n                  <p>{Backend2FrontendAlertConverter(operazione.operazione)}</p>\r\n                </Col>\r\n              </>\r\n            :\r\n              <>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                  <input type=\"checkbox\" defaultChecked=\"checked\" onChange={(e) => toggleMonitora(e,operazione.operazione)}/>\r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-10 col-xs-10\">\r\n                  <p>{Backend2FrontendAlertConverter(operazione.operazione)}</p>\r\n                </Col>\r\n              </>\r\n          :\r\n            (isOdd(i))\r\n            ?\r\n              <>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                  <input type=\"checkbox\" autoComplete=\"off\" onChange={(e) => toggleMonitora(e,operazione.operazione)}/>\r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-10 col-xs-10\">\r\n                  <p>{Backend2FrontendAlertConverter(operazione.operazione)}</p>\r\n                </Col>\r\n              </>\r\n            :\r\n              <>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                  <input type=\"checkbox\" autoComplete=\"off\" onChange={(e) => toggleMonitora(e,operazione.operazione)}/>\r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-10 col-xs-10\">\r\n                  <p>{Backend2FrontendAlertConverter(operazione.operazione)}</p>\r\n                </Col>\r\n              </>\r\n        )\r\n      })\r\n      return(listaChildren)\r\n  }\r\n\r\n  const toggleMonitora = (e,operazione) => {\r\n    const loadingToast = getLoadingToast(\"Attendere...\")\r\n    let monitora = (e.target.checked) ? true : false; \r\n    _updateMonitoraggioAlert(props.token,props.id_client,monitora,operazione)\r\n    .then( response => {\r\n        _getLatestAlerts(props.token, props.id_client)\r\n        .then( response => {\r\n          props.ClientTemplateAlert(response.data.alerts)\r\n          stopLoadingToast(loadingToast);\r\n        })\r\n        .catch(function (error) {\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(error));\r\n        })\r\n      })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getChilds()\r\n    const loadingToast = getLoadingToast(\"Attendere...\")\r\n        _getLatestAlerts(props.token, props.id_client, defaultSettimaneAlert)\r\n        .then( response => {\r\n          props.ClientTemplateAlert(response.data.alerts)\r\n          stopLoadingToast(loadingToast);\r\n      })\r\n      .catch(function (error) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(String(error));\r\n      })\r\n  },[])\r\n\r\n  return (\r\n    <Box title=\"Comunicazioni\" type=\"primary\" collapsable footer={<PopUp title=\"Gestione degli alert\" linkClass={\"clickable\"} childs={props.configurazione_alert} action={()=>getChilds()}/>}>\r\n      <div className=\"card card-danger direct-chat direct-chat-danger\">\r\n        <div className=\"card-body\">\r\n          <div className=\"direct-chat-messages\">\r\n            {props.client_template.alert.map((alert, i) => {\r\n              return(\r\n                <div className=\"direct-chat-msg\" key={i}>\r\n                  <div className=\"direct-chat-infos clearfix\">\r\n                    <span className=\"direct-chat-name float-left\">[{_ALERTCATEGORY[alert.categoria]}] - </span>\r\n                    <span className=\"direct-chat-timestamp float-right\">{Backend2FrontendDateConverter(alert.date_and_time_alert)}</span>\r\n                  </div>\r\n                  <span className=\"direct-chat-img\">\r\n                    {(alert.tipo == \"ERROR\") ? state.error_icon \r\n                    : (alert.tipo == \"WARNING\") ? state.warning_icon \r\n                    : (alert.tipo == \"OK\") ? state.success_icon\r\n                    : <></>} \r\n                  </span>\r\n                  <div className=\"direct-chat-text\">\r\n                    {alert.corpo_messaggio}\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Communications);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Box } from 'adminlte-2-react';\nimport Chart from \"react-apexcharts\";\nimport { defaultUpperBound } from '../callableRESTs';\nimport ReactPaginate from 'react-paginate';\n\n\n/**\n * connect the actions to the component\n * @param {*} dispatch \n */\nconst mapDispatchToProps = dispatch => ({});\n\n/**\n * connect the redux state to the component\n * @param {*} state \n */\nconst mapStateToProps = state => ({});\n\nconst History = (props) => {\n  return (\n    <Box title=\"Storico\" type=\"primary\" collapsable footer={\"Ultimo aggiornamento \"+props.apex.lastUpdate}>\n      <div className=\"mixed-chart\">\n        <Chart\n          options={props.apex.options}\n          series={props.apex.series}\n          type=\"area\"\n          width=\"100%\"\n          height=\"183\"\n        />\n      </div>\n    </Box>\n  );\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(History);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Box, Col } from 'adminlte-2-react';\r\nimport { CircularProgressbar, buildStyles  } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { Backend2FrontendDateConverter } from '../Tools';\r\n\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({});\r\n\r\nconst Drive = (props) => {\r\n  let totalGB = (parseInt(props.totalSpace)/(1073741824));\r\n  let freeGB = (parseInt(props.occupiedSpace)/(1073741824));\r\n  let occupiedSpace = (totalGB-freeGB);\r\n  const percentage = ((occupiedSpace*100)/totalGB).toFixed(0);\r\n\r\n  totalGB = totalGB.toFixed(2);\r\n  freeGB = freeGB.toFixed(2);\r\n  occupiedSpace = (totalGB-freeGB).toFixed(2);\r\n  \r\n\r\n\r\n  return(\r\n    <Box title={\"Drive \"+props.driveLabel+\" \"+parseInt(100-percentage)+\"% libero\"} type=\"primary\" collapsable footer={\"Ultimo aggiornamento \"+Backend2FrontendDateConverter(props.lastUpdate)}>\r\n      <Col md={4} xs={12}>\r\n        {percentage >= 90 \r\n        ? <center><CircularProgressbar value={percentage} text={`${percentage}%`} styles={{path: {stroke: '#dd4b39'}, text: {fill: '#dd4b39'}}}/></center>\r\n        : percentage >= 80 \r\n          ? <center><CircularProgressbar value={percentage} text={`${percentage}%`} styles={{path: {stroke: '#f39c12'}, text: {fill: '#f39c12'}}}/></center>\r\n          : <center><CircularProgressbar value={percentage} text={`${percentage}%`} styles={{path: {stroke: '#00a65a'}, text: {fill: '#00a65a'}}}/></center>\r\n        }\r\n      </Col>\r\n      <Col md={8} xs={12}>\r\n        <h4>Dimensione disco: {totalGB}GB</h4>\r\n        <h4>Spazio occupato: {occupiedSpace}GB</h4>\r\n        <h4>Spazio libero: {freeGB}GB</h4>\r\n      </Col>\r\n    </Box>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Drive);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Box, Col } from 'adminlte-2-react';\r\nimport { _LICENZE } from '../Constants';\r\nimport PopUp from './PopUp';\r\nimport { _getNomiSedi, _getPlaces, _getShallowClients, _modificaSedeClient } from '../callableRESTs';\r\nimport { getErrorToast, getLoadingToast, stopLoadingToast } from '../toastManager';\r\nimport Dropdown from 'react-dropdown';\r\nimport { autenticazione_fallita, idToNomeSede, nomeToIdSede, renewToken } from '../Tools';\r\nimport { totalReset, updateCTInfo, updateSidebar } from '../ActionCreator';\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n  UpdateSidebar: (elencoClients,sedi, token, listaNomi, listaSedi) => {\r\n    dispatch(updateSidebar(elencoClients,sedi, token, listaNomi, listaSedi));\r\n  },\r\n  SetClientTemplateInfo: (info) => {\r\n    dispatch(updateCTInfo(info))\r\n  },\r\n  TotalReset: () => {\r\n    dispatch(totalReset())\r\n  }\r\n});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n  id_company: state.id_company,\r\n  token: state.token, \r\n  lista_id_sedi: state.lista_id_sedi,\r\n  lista_nomi_sedi: state.lista_nomi_sedi,\r\n  client_template: state.client_template\r\n});\r\n\r\nconst ClientInfo = (props) => {\r\n\r\n  const [state, setState] = React.useState({\r\n    vecchiaSede: \"\",\r\n    nuovaSede: \"\",\r\n    sedi: []\r\n  })\r\n\r\n  useEffect(() => {\r\n    let continueUpdating = true;\r\n    _getNomiSedi(props.token, props.id_company)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n        let listaNomi = [];\r\n          let listaSedi = [];\r\n          response.data.sedi.map((sede) => {\r\n            listaNomi.push(sede.substring(sede.indexOf(\",\") + 1, sede.length));\r\n            listaSedi.push(sede.substring(0,sede.indexOf(\",\")));\r\n          })\r\n        setState((previousState) => {\r\n          return { ...previousState, sedi: listaNomi };\r\n        });\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      getErrorToast(String(error));\r\n    });\r\n  },[])\r\n\r\n  const getChilds = (vecchiaSede) => {\r\n    let childList = [];\r\n    childList = [\r\n      <>\r\n        <div className=\"col-md-12 col-xs-12\">\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <label htmlFor=\"VecchiaSede\">Vecchia Sede</label>\r\n              <input type=\"text\" value={idToNomeSede(vecchiaSede, props.lista_nomi_sedi, props.lista_id_sedi)} class=\"form-control\" id=\"VecchiaSede\" placeholder={idToNomeSede(vecchiaSede, props.lista_nomi_sedi, props.lista_id_sedi)} onChange={handleVecchiaSede} disabled/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label htmlFor=\"NuovaSede\">Nuova Sede</label>\r\n              <Dropdown onChange={handleNuovaSede} options={state.sedi} placeholder=\"Seleziona una sede\" />\r\n            </div>\r\n          </form>\r\n          <br />\r\n          <center><button class=\"btn btn-primary\" onClick={() => clickService()}>Modifica</button></center>\r\n        </div>\r\n      </>\r\n    ]\r\n    return childList;\r\n  }\r\n\r\n  const clickService = () => {\r\n    let continueUpdating = true;\r\n    console.log(state.nuovaSede)\r\n    console.log(state.vecchiaSede)\r\n    const loadingToast = getLoadingToast(\"Modificando i dati...\");\r\n    return _modificaSedeClient(props.token, props.id_client, props.id_company, state.nuovaSede, state.vecchiaSede)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n        let info_tmp = props.client_template.info;\r\n        info_tmp.sede = nomeToIdSede(state.nuovaSede, props.lista_nomi_sedi, props.lista_id_sedi)\r\n        props.SetClientTemplateInfo(info_tmp);\r\n        _getShallowClients(props.id_company, token)\r\n        .then(function (response) {\r\n          let elencoClients = response.data.shallowClients;\r\n          _getPlaces(props.id_company, token)\r\n          .then(function (response) {\r\n            let sedi = response.data.sedi;\r\n              _getNomiSedi(token, props.id_company)\r\n              .then(function (response) {\r\n                let token = (response.data.token==\"\" || response.data.token==null) ? props.token : response.data.token;\r\n                let listaNomi = [];\r\n                let listaSedi = [];\r\n                response.data.sedi.map((sede) => {\r\n                  listaNomi.push(sede.substring(sede.indexOf(\",\") + 1, sede.length));\r\n                  listaSedi.push(sede.substring(0,sede.indexOf(\",\")));\r\n                })\r\n                props.UpdateSidebar(elencoClients,sedi, token, listaNomi, listaSedi);\r\n              })\r\n            .catch(function (error) {\r\n              stopLoadingToast(loadingToast);\r\n              getErrorToast(String(error));\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            stopLoadingToast(loadingToast);\r\n            getErrorToast(String(error));\r\n          })\r\n        })\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n        stopLoadingToast(loadingToast);\r\n        let token = (response.data.token==\"\" || response.data.token==null) ? props.token : response.data.token;\r\n        //props.UpdateCompanyData(ragioneSociale, email, emailAlert, token);\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  const handleVecchiaSede = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, vecchiaSede: evt.target.value };  \r\n    });\r\n  }\r\n\r\n  const handleNuovaSede = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, nuovaSede: evt.value };  \r\n    });\r\n  }\r\n\r\n  const getLicense = (classe_licenza) => {\r\n    let label = \"\";\r\n    switch(classe_licenza){\r\n    case _LICENZE.SISTEMA_OPERATIVO.tipo:\r\n      label = _LICENZE.SISTEMA_OPERATIVO.label;\r\n      break;\r\n    case _LICENZE.BACKUP.tipo:\r\n      label = _LICENZE.BACKUP.label;\r\n      break;\r\n    case _LICENZE.ANTIVIRUS.tipo:\r\n      label = _LICENZE.ANTIVIRUS.label;\r\n      break;\r\n    case _LICENZE.RETE.tipo:\r\n      label = _LICENZE.RETE.label;\r\n      break;\r\n    case _LICENZE.VULNERABILITA.tipo:\r\n      label = _LICENZE.VULNERABILITA.label;\r\n      break;\r\n    }\r\n    return label;\r\n  }\r\n\r\n  return (\r\n    <Box title=\"Informazioni sul client\" type=\"primary\" collapsable>\r\n      <Col md={12} xs={12}>\r\n        <h4><b>Nome: </b>{props.client.nome}</h4>\r\n        <h4><b>Tipologia: </b>{props.client.nome_tipologia}</h4>\r\n        <h4><b>MAC address: </b>{props.client.mac_address}</h4>\r\n        <h4><b>Licenze in uso: </b></h4>\r\n        {props.client.codice_licenza.map((lic, i) => {\r\n          return props.client.classe_licenza.map((tipo, j) => {\r\n            return (i==j) ? <p>{i+1}) {getLicense(String(tipo))} {lic}</p> : <></>\r\n          })\r\n          //return <p>{i+1}) </p>\r\n        })}\r\n        {/*<h4><b>Gruppo di lavoro: </b>{props.client.category}</h4>*/}\r\n        <h4><b>Sede di lavoro: </b>{idToNomeSede(props.client.sede, props.lista_nomi_sedi, props.lista_id_sedi)} <PopUp title=\"Modifica sede\" messageLink={\"modifica\"} linkClass={\"clickable\"} childs={getChilds(props.client.sede)} action={()=>(null)}/></h4>\r\n      </Col>\r\n    </Box>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ClientInfo);","import React, { useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Box, Col } from 'adminlte-2-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PopUp from \"./PopUp\";\r\nimport { resetClientTemplate, servicesList, serviziOverview, totalReset, updateCTWindowsServices, updateToken } from \"../ActionCreator\";\r\nimport { defaultUpperBound } from \"../Constants\";\r\nimport { _getServiziAll, _getServiziMonitorati, _getServiziOverview, _modificaMonitoraggioServizio } from \"../callableRESTs\";\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from \"../toastManager\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { autenticazione_fallita, Backend2FrontendDateConverter, renewToken, sortResults } from \"../Tools\";\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    ServicesList: (services) => {\r\n      dispatch(servicesList(services))\r\n    },\r\n    SetOverviewServizi: (n_totali, n_running, n_stop, n_monitorati) => {\r\n      dispatch(updateCTWindowsServices(n_totali, n_running, n_stop, n_monitorati))\r\n    },\r\n    TotalReset: () => {\r\n      dispatch(totalReset())\r\n    },\r\n    UpdateToken: (token) => {\r\n      dispatch(updateToken(token));\r\n    },\r\n    ClientTemplateReset: () => {\r\n      dispatch(resetClientTemplate());\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    client_list: state.client_list,\r\n    token: state.token,\r\n    services_list: state.services_list,\r\n  }\r\n);\r\n\r\nconst WindowsServices = (props) => {\r\n\r\n  const isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\n  const merge_object_arrays = (arr1, arr2, match) => {\r\n    arr1.map((elem1) => arr2.map((elem2) => {\r\n      if(elem1.nome_servizio==elem2.nome_servizio){\r\n        elem1.monitora = elem2.monitora\r\n      }\r\n    }))\r\n    return arr1;\r\n  }\r\n\r\n  const getServicesList = () => {\r\n    let continueUpdating = true;\r\n    const loadingToast = getLoadingToast(\"Caricamento...\");\r\n    _getServiziAll(props.token, props.id_client)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n        let tmp_list = response.data.confWindowsServices\r\n        _getServiziMonitorati(token, props.id_client)\r\n        .then(function (response) {\r\n          stopLoadingToast(loadingToast);\r\n          let tmp_list2 = merge_object_arrays(tmp_list, response.data.monitoraggi, 'nome_servizio')\r\n          sortResults('nome_servizio', true, tmp_list2);\r\n          let list = servicesListMaker(tmp_list2);\r\n          props.ServicesList(list)\r\n        })\r\n        .catch(function (error) {\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(error));\r\n        });\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  const servicesListMaker = (services) => {\r\n    let returnList = [<><Col xs={12} md={12}>Ultimo aggiornamento: {Backend2FrontendDateConverter(services[0].date_and_time)}<hr/></Col><Col xs={1} md={1}><strong><h5>MONITORA</h5></strong></Col><Col xs={5} md={5}><strong><h5>NOME SERVIZIO</h5></strong></Col><Col xs={2} md={2}><strong><h5>STATO</h5></strong></Col><Col xs={2} md={2}><strong><h5>TIPO DI AVVIO</h5></strong></Col><Col xs={2} md={2}><strong><h5>TIPO DI SERVIZIO</h5></strong></Col></>];\r\n    let ServiceControllerStatus = [\"\", \"Stop\", \"Start (pending)\", \"Stop (pending)\", \"Running\", \"Continue (pending)\", \"In pausa (pending)\", \"In pausa\"]\r\n    let ServiceStartMode = [\"Boot\", \"System\", \"Automatico\", \"Manuale\", \"Disabilitato\"] \r\n    let ServiceType = []\r\n    ServiceType[1] = \"KernelDriver\";\r\n    ServiceType[2] = \"FileSystemDriver\";\r\n    ServiceType[4] = \"Adapter\";\r\n    ServiceType[8] = \"RecognizerDriver\";\r\n    ServiceType[16] = \"Win32OwnProcess\";\r\n    ServiceType[32] = \"Win32ShareProcess\";\r\n    ServiceType[256] = \"InteractiveProcess\";\r\n    services.map((service, i) => {\r\n      if(service.hasOwnProperty('monitora')){\r\n        returnList = getCard(returnList, service.nome_servizio, service.stato, i+1, ServiceControllerStatus, ServiceStartMode, ServiceType, service.start_type, service.service_type, service.monitora);\r\n      }else{\r\n        returnList = getCard(returnList, service.nome_servizio, service.stato, i+1, ServiceControllerStatus, ServiceStartMode, ServiceType, service.start_type, service.service_type, null);\r\n      }\r\n    })\r\n    let buttons = <Col className=\"col-xs-12 col-md-12\"><br/>\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button type=\"button\" class=\"btn btn-secondary\">← Precedente</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\">{Math.ceil(props.services[3]/defaultUpperBound)}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\">Successivo →</button>\r\n      </div>\r\n    </Col>\r\n    //returnList = [returnList, buttons]\r\n    return returnList\r\n  }\r\n  \r\n  const toggleMonitora = (servizio, actualValue) => {\r\n    //alert(actualValue)\r\n    let continueUpdating = true;\r\n    let monitora\r\n    if(actualValue==true || actualValue==\"true\") monitora = \"false\"\r\n    else monitora = \"true\"\r\n    const loadingToast = getLoadingToast(\"Modifica monitoraggio servizi...\");\r\n    _modificaMonitoraggioServizio(props.token, servizio, props.id_client, monitora)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n\r\n        getServicesList()\r\n        _getServiziOverview(token, props.id_client)\r\n        .then(function (response) {\r\n          stopLoadingToast(loadingToast);\r\n          props.SetOverviewServizi(response.data.n_totali, response.data.n_running, response.data.n_stopped, response.data.n_monitorati)\r\n        })\r\n        .catch(function (error) {\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(error));\r\n        });\r\n      }\r\n    }).catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  const getCard = (returnList, opname, stato, i, ServiceControllerStatus, ServiceStartMode, ServiceType, start_type, service_type, monitora) => {\r\n    return (!isOdd(i))\r\n    ? \r\n        monitora == true\r\n        ?\r\n          returnList = [returnList, \r\n            <>\r\n              <Col className=\"oddColor vertical-aligner col-md-1 col-xs-1\"><input type=\"checkbox\" key={Math.random()+opname} onChange={()=>toggleMonitora(opname, true)} id={\"monitora\"+opname} name={\"monitora\"+opname} value={\"monitora\"+opname} defaultChecked=\"checked\"/></Col>\r\n              <Col className=\"oddColor vertical-aligner col-md-5 col-xs-5\"><p>{opname}</p></Col>\r\n              <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceControllerStatus[parseInt(stato)]}</p></Col>\r\n              <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceStartMode[parseInt(start_type)]}</p></Col>\r\n              <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceType[parseInt(service_type)]}</p></Col>\r\n            </>\r\n          ]\r\n        :\r\n          returnList = [returnList, \r\n            <>\r\n              <Col className=\"oddColor vertical-aligner col-md-1 col-xs-1\"><input type=\"checkbox\" key={Math.random()+opname} onChange={()=>toggleMonitora(opname, false)} id={\"monitora\"+opname} name={\"monitora\"+opname} value={\"monitora\"+opname} autocomplete=\"off\"/></Col>\r\n              <Col className=\"oddColor vertical-aligner col-md-5 col-xs-5\"><p>{opname}</p></Col>\r\n              <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceControllerStatus[parseInt(stato)]}</p></Col>\r\n              <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceStartMode[parseInt(start_type)]}</p></Col>\r\n              <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceType[parseInt(service_type)]}</p></Col>\r\n            </>\r\n          ]\r\n    : \r\n        monitora == true\r\n        ?\r\n          returnList = [returnList, \r\n            <>\r\n              <Col className=\"evenColor vertical-aligner col-md-1 col-xs-1\"><input type=\"checkbox\" key={Math.random()+opname} onChange={()=>toggleMonitora(opname, true)} id={\"monitora\"+opname} name={\"monitora\"+opname} value={\"monitora\"+opname} defaultChecked=\"checked\"/></Col>\r\n              <Col className=\"evenColor vertical-aligner col-md-5 col-xs-5\"><p>{opname}</p></Col>\r\n              <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceControllerStatus[parseInt(stato)]}</p></Col>\r\n              <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceStartMode[parseInt(start_type)]}</p></Col>\r\n              <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceType[parseInt(service_type)]}</p></Col>\r\n            </>\r\n          ]\r\n        :\r\n          returnList = [returnList, \r\n            <>\r\n              <Col className=\"evenColor vertical-aligner col-md-1 col-xs-1\"><input type=\"checkbox\" key={Math.random()+opname} onChange={()=>toggleMonitora(opname, false)} id={\"monitora\"+opname} name={\"monitora\"+opname} value={\"monitora\"+opname} autocomplete=\"off\"/></Col>\r\n              <Col className=\"evenColor vertical-aligner col-md-5 col-xs-5\"><p>{opname}</p></Col>\r\n              <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceControllerStatus[parseInt(stato)]}</p></Col>\r\n              <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceStartMode[parseInt(start_type)]}</p></Col>\r\n              <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><p>{ServiceType[parseInt(service_type)]}</p></Col>\r\n            </>\r\n          ]\r\n  }\r\n\r\n  return (\r\n    \r\n    <Box title=\"Lista dei servizi di Windows\" type=\"primary\" collapsable footer={<PopUp  title=\"Gestione dei servizi di Windows\" linkClass={\"clickable\"} childs={props.services_list} action={()=>getServicesList()}/>}>\r\n      <Col md={12} xs={12}>\r\n        <h4><FontAwesomeIcon icon={[\"fas\", \"check-circle\"]} /> Servizi monitorati: {props.services[0]}</h4>\r\n        <h4><FontAwesomeIcon icon={[\"fas\", \"play-circle\"]} /> Servizi in esecuzione: {props.services[1]}</h4>\r\n        <h4><FontAwesomeIcon icon={[\"fas\", \"times-circle\"]} /> Servizi non in esecuzione: {props.services[2]}</h4>\r\n      </Col>\r\n    </Box>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(WindowsServices);","import React from \"react\";\r\nimport Collapsible from 'react-collapsible';\r\nimport { connect } from 'react-redux';\r\nimport { Box, Col } from 'adminlte-2-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ReactPaginate from 'react-paginate';\r\nimport PopUp from \"./PopUp\";\r\nimport { eventsList, totalReset, updateToken } from \"../ActionCreator\";\r\nimport { defaultUpperBound } from \"../Constants\";\r\nimport { _getEventi, _getServiziAll, _getServiziMonitorati, _modificaMonitoraggioServizio } from \"../callableRESTs\";\r\nimport { getErrorToast, getLoadingToast, stopLoadingToast } from \"../toastManager\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { autenticazione_fallita, Backend2FrontendDateConverter, renewToken, sortResults } from \"../Tools\";\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    EventsList: (events) => {\r\n      dispatch(eventsList(events))\r\n    },\r\n    TotalReset: () => {\r\n      dispatch(totalReset())\r\n    },\r\n    UpdateToken: (token) => {\r\n      dispatch(updateToken(token));\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    client_list: state.client_list,\r\n    token: state.token,\r\n    events_list: state.events_list\r\n  }\r\n);\r\n\r\nconst WindowsEvents = (props) => {\r\n\r\n  const [state, setState] = React.useState({\r\n    currentSlot : [1,1,1,1]\r\n  })\r\n\r\n  const isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\n  const getEventsList = (currentSlot=[1,1,1,1]) => {\r\n    let continueUpdating = true;\r\n    // console.log(currentSlot)\r\n    const loadingToast = getLoadingToast(\"Caricamento...\");\r\n    _getEventi(props.token, props.id_client, \"A\", currentSlot[0])\r\n    .then(function (response) {\r\n      \r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n        stopLoadingToast(loadingToast);\r\n        //console.log(response.data.eventi.filter(function(o) { return o.sottocategoria == 'A' }).length)\r\n        let listA = response.data.eventi;\r\n        if(listA.length != 0){\r\n          sortResults(\"date_and_time_evento\",false,listA)\r\n        }\r\n        _getEventi(token, props.id_client, \"C\", currentSlot[1])\r\n        .then(function (response) {\r\n          stopLoadingToast(loadingToast);\r\n          //console.log(response.data.eventi.filter(function(o) { return o.sottocategoria == 'C' }).length)\r\n          let listC = response.data.eventi;\r\n          if(listC.length != 0){\r\n            sortResults(\"date_and_time_evento\",false,listC)\r\n          }\r\n          _getEventi(token, props.id_client, \"H\", currentSlot[2])\r\n          .then(function (response) {\r\n            stopLoadingToast(loadingToast);\r\n            //console.log(response.data.eventi.filter(function(o) { return o.sottocategoria == 'H' }).length)\r\n            let listH = response.data.eventi;\r\n            if(listH.length != 0){\r\n              sortResults(\"date_and_time_evento\",false,listH)\r\n            }\r\n            _getEventi(token, props.id_client, \"S\", currentSlot[3])\r\n            .then(function (response) {\r\n              stopLoadingToast(loadingToast);\r\n              //console.log(response.data.eventi.filter(function(o) { return o.sottocategoria == 'S' }).length)\r\n              let listS = response.data.eventi;\r\n              if(listS.length != 0){\r\n                sortResults(\"date_and_time_evento\",false,listS)\r\n              }\r\n              let merged = [...listA, ...listC, ...listH, ...listS];\r\n                let list = servicesListMaker(merged);\r\n                props.EventsList(list)\r\n            })\r\n            .catch(function (error) {\r\n              stopLoadingToast(loadingToast);\r\n              getErrorToast(String(error));\r\n            });\r\n          })\r\n          .catch(function (error) {\r\n            stopLoadingToast(loadingToast);\r\n            getErrorToast(String(error));\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(error));\r\n        });\r\n        \r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  const openToggle = (id) => {\r\n    var elem = document.getElementsByClassName(\"arrowAccordion\"+id)[0];\r\n    elem.style.transform = \"rotate(90deg)\";\r\n    elem.style.transition = \"transform 1s ease\";\r\n    elem.style.display = \"inline-block\";\r\n  }\r\n\r\n  const closeToggle = (id) => {\r\n    var elem = document.getElementsByClassName(\"arrowAccordion\"+id)[0];\r\n    elem.style.transform = \"rotate(0deg)\";\r\n    elem.style.transition = \"transform 1s ease\";\r\n    elem.style.display = \"inline-block\";\r\n  }\r\n\r\n  const pagination_foo = (currentSlot, posSlot, add, n_sottocategoria) => {\r\n    let controller = \"\";\r\n    switch (posSlot){\r\n      case 0: controller = \"A\"\r\n        break;\r\n      case 1: controller = \"C\"\r\n        break;\r\n      case 2: controller = \"H\"\r\n        break;\r\n      case 3: controller = \"S\"\r\n        break;\r\n    }\r\n    if(add==false){\r\n      if(currentSlot[posSlot]>1){\r\n        currentSlot[posSlot]--; \r\n        setState((previousState) => {\r\n          return { ...previousState, currentSlot: currentSlot };\r\n        });\r\n        console.log(currentSlot);\r\n        getEventsList(currentSlot)\r\n      }\r\n    }else{\r\n      if(currentSlot[posSlot]<Math.ceil(n_sottocategoria[controller]/defaultUpperBound)){\r\n        currentSlot[posSlot]++; \r\n        setState((previousState) => {\r\n          return { ...previousState, currentSlot: currentSlot };\r\n        });\r\n        console.log(currentSlot);\r\n        getEventsList(currentSlot)\r\n      }\r\n    }\r\n  }\r\n\r\n  const servicesListMaker = (services) => {\r\n    let lastUpdate = \"Nessun dato disponibile.\"\r\n    if(services.length != 0) lastUpdate = services[0].date_and_time\r\n    let returnList = [<><Col className=\"popminwidth col-md-12 col-xs-12\">Ultimo aggiornamento: {Backend2FrontendDateConverter(lastUpdate)}<hr/></Col></>];\r\n    let status = [\"\", \"Error\", \"Warning\", \"\", \"Information\", \"\", \"\", \"\", \"SuccessAudit\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"FailureAudit\"]\r\n    //order by category\r\n    services.sort(function (a, b) {\r\n      return a.sottocategoria.localeCompare(b.sottocategoria);\r\n    });\r\n    //console.log(services)\r\n    //for each category print\r\n    let categoriesHeaderWasPrinted = [false, false, false, false];\r\n    let sottocategoria = \"\";\r\n    let compare_sottocategoria = \"\";\r\n    let n_sottocategoria = 0;\r\n    for(let j=0; j<4; j++){\r\n      if(j==0){\r\n        n_sottocategoria = props.tot_per_sottocategoria.A\r\n      }\r\n      if(j==1){\r\n        n_sottocategoria = props.tot_per_sottocategoria.C\r\n      }\r\n      if(j==2){\r\n        n_sottocategoria = props.tot_per_sottocategoria.H\r\n      }\r\n      if(j==3){\r\n        n_sottocategoria = props.tot_per_sottocategoria.S\r\n      }\r\n      if(n_sottocategoria==undefined) n_sottocategoria = 0;\r\n      categoriesHeaderWasPrinted[j] = true\r\n      switch(j){\r\n        case 0:\r\n          sottocategoria = \"Application\";\r\n          compare_sottocategoria = \"A\";\r\n          break;\r\n        case 1:\r\n          sottocategoria = \"Security\";\r\n          compare_sottocategoria = \"C\";\r\n          break;\r\n        case 2:\r\n          sottocategoria = \"Hardware\";\r\n          compare_sottocategoria = \"H\";\r\n          break;\r\n        case 3:\r\n          sottocategoria = \"System\";\r\n          compare_sottocategoria = \"S\";\r\n          break;\r\n      }\r\n      returnList = [returnList, \r\n        <div class=\"winServices\">\r\n          <Collapsible onOpen={()=>openToggle(j)} onClose={()=>closeToggle(j)} trigger={<div className=\"clickable\"><h4><span className={\"arrowAccordion\"+j}><FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} /></span> {sottocategoria} ({n_sottocategoria})</h4></div>}>\r\n            <Col xs={2} md={2}><strong><h5>LEVEL</h5></strong></Col><Col xs={3} md={3}><strong><h5>DATA E ORA</h5></strong></Col><Col xs={2} md={2}><strong><h5>SOURCE</h5></strong></Col><Col xs={1} md={1}><strong><h5>ID</h5></strong></Col>{/*<Col xs={2} md={2}><strong><h5>TASK CATEGORY</h5></strong></Col>*/}<Col xs={4} md={4}><strong><h5>DESCRIZIONE</h5></strong></Col>\r\n            {services.map((service, i) => getCategories(service.level, service.source, service.id_event, service.task_category, service.info, i, status, compare_sottocategoria, service.sottocategoria, service.date_and_time_evento))}\r\n            <Col className=\"col-xs-12 col-md-12 reactPaginate\"><br/>\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" onClick={()=>pagination_foo(Math.ceil(n_sottocategoria/defaultUpperBound) - state.currentSlot + 1, j, false, props.tot_per_sottocategoria, j)}>← Precedente</button>\r\n                <button type=\"button\" class=\"btn btn-secondary\">{state.currentSlot[j]}/{Math.ceil(n_sottocategoria/defaultUpperBound)}</button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" onClick={()=>pagination_foo(Math.ceil(n_sottocategoria/defaultUpperBound) - state.currentSlot + 1, j, true, props.tot_per_sottocategoria, j)}>Successivo →</button>\r\n              </div>\r\n            </Col>\r\n          </Collapsible>\r\n        </div>\r\n      ]\r\n    }\r\n    return returnList\r\n  }\r\n\r\n  const getCategories = (level, source, id_event, task_category, info, i, status, compare_sottocategoria, sottocategoria, date) => {\r\n    if (info == \"\") info = \" \";\r\n    let oddcolor = isOdd(i);\r\n    if(compare_sottocategoria == sottocategoria)\r\n      return (oddcolor==true)\r\n      ? \r\n        <>\r\n          <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><p>{status[parseInt(level)]}</p></Col>\r\n          <Col className=\"oddColor vertical-aligner col-md-3 col-xs-3\"><p>{Backend2FrontendDateConverter(date)}</p></Col>\r\n          <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><p>{source}</p></Col>\r\n          <Col className=\"oddColor vertical-aligner col-md-1 col-xs-1\"><p>{id_event}</p></Col>\r\n          {/*<Col className=\"oddColor col-md-2 col-xs-2\"><p>{task_category}</p></Col>*/}\r\n          <Col className=\"oddColor vertical-aligner col-md-4 col-xs-4\"><p>{info}</p></Col>\r\n        </>\r\n      :\r\n        <>\r\n          <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><p>{status[parseInt(level)]}</p></Col>\r\n          <Col className=\"evenColor vertical-aligner col-md-3 col-xs-3\"><p>{Backend2FrontendDateConverter(date)}</p></Col>\r\n          <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><p>{source}</p></Col>\r\n          <Col className=\"evenColor vertical-aligner col-md-1 col-xs-1\"><p>{id_event}</p></Col>\r\n          {/*<Col className=\"evenColor col-md-2 col-xs-2\"><p>{task_category}</p></Col>*/}\r\n          <Col className=\"evenColor vertical-aligner col-md-4 col-xs-4\"><p>{info}</p></Col>\r\n        </>\r\n    else return <></>\r\n  }\r\n\r\n  return (\r\n    <Box title=\"Lista degli eventi di Windows\" type=\"primary\" collapsable footer={<PopUp title=\"Gestione degli eventi di Windows\" linkClass={\"clickable\"} childs={props.events_list} action={()=>getEventsList()}/>}>\r\n      <Col md={12} xs={12}>\r\n        <h4><FontAwesomeIcon icon={[\"fas\", \"times-circle\"]} /> Problemi rilevati oggi: {props.events[0]}</h4>\r\n        <h4><FontAwesomeIcon icon={[\"fas\", \"exclamation-circle\"]} /> Warnings rilevati oggi: {props.events[1]}</h4>\r\n      </Col>\r\n    </Box>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(WindowsEvents);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Box, Col } from 'adminlte-2-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PopUp from \"./PopUp\";\r\nimport { servicesList } from \"../ActionCreator\";\r\nimport { url_lista_serviziFake } from \"../REST\";\r\nimport axios from \"axios\";\r\nimport { Accordion, Alert, Card } from \"react-bootstrap\";\r\nimport { getErrorToast, getLoadingToast, stopLoadingToast } from \"../toastManager\";\r\nimport Collapsible from \"react-collapsible\";\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    ServicesList: (services) => {\r\n      dispatch(servicesList(services))\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    client_list: state.client_list,\r\n    token: state.token,\r\n    services_list: state.services_list\r\n  }\r\n);\r\n\r\nconst OperationsList = (props) => {\r\n\r\n  const getServicesList = (selected, token) => {\r\n    const loadingToast = getLoadingToast(\"Caricamento...\");\r\n    axios.post(url_lista_serviziFake, {\r\n      nome_client: selected\r\n    })\r\n    .then(function (response) {\r\n      stopLoadingToast(loadingToast);\r\n      let list = servicesListMaker(response.data.servizi);\r\n      props.ServicesList(list)\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  const openToggle = (id) => {\r\n    var elem = document.getElementsByClassName(\"arrowAccordion\"+id)[0];\r\n    elem.style.transform = \"rotate(90deg)\";\r\n    elem.style.transition = \"transform 1s ease\";\r\n    elem.style.display = \"inline-block\";\r\n  }\r\n\r\n  const closeToggle = (id) => {\r\n    var elem = document.getElementsByClassName(\"arrowAccordion\"+id)[0];\r\n    elem.style.transform = \"rotate(0deg)\";\r\n    elem.style.transition = \"transform 1s ease\";\r\n    elem.style.display = \"inline-block\";\r\n  }\r\n\r\n  const servicesListMaker = (services) => {\r\n    let returnList = [<p class=\"infoDisabled\">* Operazione non selezionabile con la licenza in uso.</p>];\r\n    let status = [\"\", \"RUNNING\", \"PROBLEMI\", \"WARINNG\"]\r\n    services.map((service, i) => {\r\n      switch(service.stato){\r\n        case \"0\":\r\n          returnList = getCard(returnList, service.nome, false, i+1);\r\n          break;\r\n        default:\r\n          returnList = getCard(returnList, service.nome, true, i+1);\r\n      }\r\n    })\r\n    return returnList;\r\n  }\r\n  \r\n  const getCard = (returnList, opname, enabled, i) => {\r\n    returnList = [returnList, \r\n      <Collapsible onOpen={()=>openToggle(i)} onClose={()=>closeToggle(i)} trigger={<div className=\"clickable\"><h4><span className={\"arrowAccordion\"+i}><FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} /></span> {opname}</h4></div>}>\r\n        {enabled \r\n          ? <p><input type=\"checkbox\" checked/> <label>Abilita operazione</label></p>\r\n          : <p><input type=\"checkbox\"/> <label>Abilita operazione</label></p>\r\n        }\r\n        <h5>Descrizione:</h5>  \r\n      </Collapsible>\r\n\r\n  \t]\r\n\r\n  return returnList\r\n  }\r\n\r\n  return (\r\n    <Box title=\"Lista delle operazioni\" type=\"primary\" collapsable footer={<PopUp title=\"Gestione delle operazioni\" linkClass={\"clickable\"} childs={props.services_list} action={()=>getServicesList(props.selected, props.token)}/>}>\r\n      <Col md={12} xs={12}>\r\n        <h4><FontAwesomeIcon icon={[\"fas\", \"check-circle\"]} /> Operazioni attive: {props.ops[0]}</h4>\r\n        <h4><FontAwesomeIcon icon={[\"fas\", \"times-circle\"]} /> Operazioni con problemi: {props.ops[2]}</h4>\r\n        <h4><FontAwesomeIcon icon={[\"fas\", \"exclamation-circle\"]} /> Operazioni con warnings: {props.ops[3]}</h4>\r\n      </Col>\r\n    </Box>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(OperationsList);","import React, { useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Content, Row, Col } from 'adminlte-2-react';\r\nimport TrafficLightButtons from './TrafficLightButtons';\r\nimport Communications from './Communications';\r\nimport History from './History';\r\nimport Drive from './Drive';\r\nimport ClientInfo from './ClientInfo';\r\nimport { ModalProvider } from 'react-simple-hook-modal';\r\nimport { _getClientHistory, _getClientOverview, _getDeepClient, _getDrives, _getEventiOverview, _getLastDate, _getLatestAlerts, _getServiziOverview } from \"../callableRESTs\";\r\nimport WindowsServices from \"./WindowsServices\";\r\nimport WindowsEvents from \"./WindowsEvents\";\r\nimport OperationsList from \"./OperationsList\";\r\nimport { getErrorToast, getLoadingToast, stopLoadingToast } from \"../toastManager\";\r\nimport { updateClientHistory, resetClientTemplate, serviziOverview, updateClientOverview, updateCTAlert, updateCTInfo, updateCTWindowsEvents, updateCTWindowsServices, totalReset, updateToken, getLastDate } from \"../ActionCreator\";\r\nimport { defaultUpdateInterval } from \"../Constants\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { autenticazione_fallita, renewToken } from \"../Tools\";\r\n\r\ndocument.body.classList.add('fixed');\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n  SetClientTemplateWindowsServices: (n_totali, n_running, n_stop, n_monitorati) => {\r\n    dispatch(updateCTWindowsServices(n_totali, n_running, n_stop, n_monitorati))\r\n  },\r\n  SetClientTemplateWindowsEvents: (n_problemi, n_warnings) => {\r\n    dispatch(updateCTWindowsEvents(n_problemi, n_warnings))\r\n  },\r\n  SetClientTemplateInfo: (info) => {\r\n    dispatch(updateCTInfo(info))\r\n  },\r\n  ResetClientTemplate: () => {\r\n    dispatch(resetClientTemplate())\r\n  },\r\n  SetClientTemplateAlert: (alert) => {\r\n    dispatch(updateCTAlert(alert))\r\n  },\r\n  SetClientTemplateOverview: (errori,warnings,ok) => {\r\n    dispatch(updateClientOverview(errori,warnings,ok))\r\n  },\r\n  UpdateClientHistory: (history_data) => {\r\n    dispatch(updateClientHistory(history_data));\r\n  },\r\n  TotalReset: () => {\r\n    dispatch(totalReset());\r\n  },\r\n  UpdateToken: (token) => {\r\n    dispatch(updateToken(token));\r\n  },\r\n  GetLastDate: (date) => {\r\n    dispatch(getLastDate(date));\r\n  }\r\n});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    last_insert_date: state.client_template.last_insert_date,\r\n    client_template: state.client_template,\r\n    client_list: state.client_list,\r\n    nome_company: state.nome_company,\r\n    token: state.token,\r\n    logged: state.logged,\r\n    n_totali: state.n_totali,\r\n    n_running: state.n_running,\r\n    n_stop: state.n_stop,\r\n    n_monitorati: state.n_monitorati,\r\n    clientOverview: {\r\n      problems: 3,\r\n      warnings: 12,\r\n      running: 44\r\n    },\r\n    drives: [\r\n      {\r\n        driveLabel: \"C\",\r\n        occupiedSpace: 93,\r\n        totalSpace: 250,\r\n        lastUpdate: \"12 Feb 17:54\"\r\n      },\r\n      {\r\n        driveLabel: \"D\",\r\n        occupiedSpace: 22,\r\n        totalSpace: 250,\r\n        lastUpdate: \"12 Feb 18:01\"\r\n      },\r\n    ],\r\n    apex: {\r\n      lastUpdate: \"12 Feb 18:00\",\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: [\"17:00\", \"17:05\", \"17:10\", \"17:15\", \"17:20\", \"17:25\", \"17:30\", \"17:35\", \"17:40\", \"17:45\", \"17:50\", \"17:55\", \"18:00\"]\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            opacityFrom: 0.7,\r\n            opacityTo: 0.9,\r\n            stops: [0, 90, 100]\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n      },\r\n      colors: [\"#dd4b39\", \"#f39c12\"],\r\n      series: [\r\n        {\r\n          name: \"Warnings\",\r\n          data: [15, 16, 10, 9, 3, 2, 8, 3, 16, 14, 12, 10, 12],\r\n          color: \"#f39c12\"\r\n        },\r\n        {\r\n          name: \"Problemi\",\r\n          data: [5, 4, 5, 8, 3, 3, 3, 5, 4, 2, 1, 0, 3],\r\n          color: \"#dd4b39\"\r\n        }\r\n      ]\r\n    }\r\n});\r\n\r\nconst Dashboard = (props) => {\r\n  const [state, setState] = React.useState({\r\n    clientData: null,\r\n    problemi_oggi: 0,\r\n    warning_oggi: 0,\r\n    tot_per_sottocategoria: [],\r\n    drives: []\r\n  })\r\n\r\n  const updateData = (continueUpdating) => {\r\n    //on component mount\r\n    const loadingToast = getLoadingToast(\"Caricamento...\");\r\n    _getDeepClient(props.id_client, props.id_company, props.token)\r\n    .then(function (response) {\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n        props.SetClientTemplateInfo(response.data)\r\n        setState((previousState) => {\r\n          return { ...previousState, clientData: response.data };\r\n        });\r\n        _getEventiOverview(token, props.id_client)\r\n          .then(function (response) {\r\n            props.SetClientTemplateWindowsEvents(response.data.problemi_oggi, response.data.warning_oggi)\r\n            setState((previousState) => {\r\n              return { ...previousState, \r\n                problemi_oggi: response.data.problemi_oggi,\r\n                warning_oggi: response.data.warning_oggi,\r\n                tot_per_sottocategoria: response.data.tot_per_sottocategoria\r\n              };\r\n            });\r\n            _getDrives(token, props.id_client)\r\n            .then(function (response) {\r\n              setState((previousState) => {\r\n                return { ...previousState, \r\n                  drives: response.data.drives\r\n                };\r\n              });\r\n              _getLatestAlerts(token,props.id_client)\r\n                .then(function (response) {\r\n                  //props alert\r\n                  props.SetClientTemplateAlert(response.data.alerts)\r\n                  _getServiziOverview(token, props.id_client)\r\n                  .then(function (response) {\r\n                    //n_monitorati, n_esecuzione, n_stop\r\n                    props.SetClientTemplateWindowsServices(response.data.n_totali, response.data.n_running, response.data.n_stopped, response.data.n_monitorati)\r\n                    _getClientOverview(token, props.id_client)\r\n                    .then(function (response) {\r\n                      // props.SetClientTemplateWindowsServices(response.data.n_totali, response.data.n_running, response.data.n_stopped, response.data.n_monitorati)\r\n                      props.SetClientTemplateOverview(\r\n                        response.errori,\r\n                        response.warnings,\r\n                        response.ok\r\n                      )\r\n                      _getClientHistory(token,props.id_client)\r\n                      .then( response => {\r\n                        props.UpdateClientHistory(response);\r\n                        _getLastDate(props.id_client,token)\r\n                        .then( response => {\r\n                          stopLoadingToast(loadingToast);\r\n                          props.GetLastDate(response.data.maxDate);\r\n                        })\r\n                        .catch(function (error) {\r\n                          stopLoadingToast(loadingToast);\r\n                          getErrorToast(String(error));\r\n                        })\r\n                      })\r\n                      .catch(function (error) {\r\n                        stopLoadingToast(loadingToast);\r\n                        getErrorToast(String(error));\r\n                      })\r\n                    })\r\n                    .catch(function (error) {\r\n                      stopLoadingToast(loadingToast);\r\n                      getErrorToast(String(error));\r\n                    })\r\n                  })\r\n                  .catch(function (error) {\r\n                    stopLoadingToast(loadingToast);\r\n                    getErrorToast(String(error));\r\n                  })\r\n              })\r\n            .catch(function (error) {\r\n              stopLoadingToast(loadingToast);\r\n              getErrorToast(String(error));\r\n            })\r\n          })\r\n        })\r\n        .catch(function (error) {\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(error));\r\n        });\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  useEffect( () => {\r\n    let continueUpdating = true;\r\n    props.ResetClientTemplate()\r\n    updateData(continueUpdating);\r\n    let idInterval = setInterval(function(){ \r\n      updateData(continueUpdating);\r\n    }, defaultUpdateInterval);\r\n    return () => {\r\n      //on component unmount\r\n      clearInterval(idInterval);\r\n    }\r\n }, []);\r\n\r\n const isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\n const getChilds = (list,tipo) => {\r\n  let col = [\"servizi\",\"eventi\",\"drives\"]\r\n  let returnList = [\r\n    <div className=\"col-md-12 col-xs-12\">\r\n      {list.map( (el,i) => {\r\n        return (isOdd(i)) \r\n        ?\r\n          <Row>\r\n            <Col className=\"oddColor col-md-6 col-xs-6\"><h4>Numero di <strong>{col[i]}</strong> che presentano {tipo}:</h4></Col>\r\n            <Col className=\"oddColor col-md-6 col-xs-6\"><h4>{el} </h4></Col>\r\n          </Row>\r\n        :\r\n          <Row>\r\n            <Col className=\"evenColor col-md-6 col-xs-6\"><h4>Numero di <strong>{col[i]}</strong> che presentano {tipo}:</h4></Col>\r\n            <Col className=\"evenColor col-md-6 col-xs-6\"><h4>{el} </h4></Col>\r\n          </Row>\r\n      })}\r\n    </div>\r\n    \r\n  ];\r\n  return returnList;\r\n }\r\n\r\n  return (\r\n  state.clientData != null \r\n  ? \r\n  <Content title={props.title} subTitle={props.last_insert_date && \"Ultimo inserimento: \" + props.last_insert_date.replace(\"T\",\" \").substring(0,19)} browserTitle={props.title}>  \r\n    <Row>\r\n      <ModalProvider>\r\n        <TrafficLightButtons size={4} titles={[\"Problemi\", \"Warnings\", \"Problemi e warning risolti\"]} problems={(props.client_template.overview.problemi.map(p => p).reduce((sum, current) => sum + current, 0 ))} warnings={(props.client_template.overview.warnings.map(p => p).reduce((sum, current) => sum + current, 0 ))} running={(props.client_template.overview.ok.map(p => p).reduce((sum, current) => sum + current, 0 ))} popUpChildsWarnings={getChilds(props.client_template.overview.warnings,\"warnings\")} popUpChildsProblemi={getChilds(props.client_template.overview.problemi,\"problemi\")} idClientsWarnings={[]} idClientsProblemi={[]} isHome={false}/>\r\n        <Col md={8} xs={12}>\r\n          <Communications id_client={props.id_client}/>\r\n          <History apex={props.client_template.history}/>\r\n        </Col>\r\n        <Col md={4} xs={6}>\r\n          <ClientInfo client={props.client_template.info} id_client={props.id_client}/>\r\n        </Col>\r\n\r\n        {state.drives != [] \r\n        ? state.drives.map((drive) =>  \r\n          <Col md={4} xs={6}>\r\n            <Drive driveLabel={drive.driveLabel} occupiedSpace={drive.occupiedSpace} lastUpdate={drive.lastUpdate} totalSpace={drive.totalSpace}/>\r\n          </Col>\r\n        )\r\n        : <></>}\r\n        {/*<Col md={4} xs={6}>\r\n          <OperationsList selected={props.title} ops={[state.clientData.op_attive, state.clientData.op_esecuzione, state.clientData.op_problemi, state.clientData.op_warnings]}/>\r\n\r\n        </Col>*/}\r\n        <Col md={4} xs={6}>\r\n          <WindowsServices selected={props.title} id_client={props.id_client} services={[props.client_template.windows_services.n_monitorati, props.client_template.windows_services.n_esecuzione, props.client_template.windows_services.n_stop, props.client_template.windows_services.n_totali]}/>\r\n        </Col>\r\n        <Col md={4} xs={6}>\r\n          <WindowsEvents selected={props.title} id_client={props.id_client} events={[props.client_template.windows_events.n_problemi, props.client_template.windows_events.n_warnings]} tot_per_sottocategoria={state.tot_per_sottocategoria}/>\r\n        </Col>\r\n      </ModalProvider>\r\n    </Row>\r\n  </Content>\r\n  : <></>\r\n);\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Dashboard);","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { totalReset, updateClientLicenses, updateToken } from \"../ActionCreator\";\r\nimport { _assignLicenze } from \"../callableRESTs\";\r\nimport { getErrorToast, getLoadingToast, stopLoadingToast } from \"../toastManager\";\r\nimport { autenticazione_fallita, renewToken } from \"../Tools\";\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\n const mapDispatchToProps = dispatch => ({\r\n     UpdateClientLicenses: (license,id_client) => {\r\n        dispatch(updateClientLicenses(license,id_client))\r\n     },\r\n     TotalReset: () => {\r\n        dispatch(totalReset());\r\n      },\r\n      UpdateToken: (token) => {\r\n        dispatch(updateToken(token));\r\n      }\r\n });\r\n\r\n /**\r\n  * connect the redux state to the component\r\n  * @param {*} state \r\n  */\r\n const mapStateToProps = state => {\r\n     return {\r\n        company_template: state.company_template,\r\n        token: state.token,\r\n        id_company: state.id_company\r\n     }  \r\n };\r\n\r\n const isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\nconst AssignLicenses = (props) => {\r\n    \r\n    const [state,setState] = useState(0);\r\n\r\n    const _licenseChange = (e) => {\r\n        props.company_template.licensesList.filter( licenza => !props.client.classe_licenza.includes(licenza.classe)).forEach( (license,i) => {\r\n            if(i==e.target.value){\r\n                setState({\r\n                    \"codice\": license.codice,\r\n                    \"classe\": license.classe\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    const _assignLicense = () => {\r\n        let continueUpdating=true;\r\n        if(state != 0) {\r\n            const loadingToast = getLoadingToast(\"Assegnando la licenza...\");\r\n            _assignLicenze(props.client.id_client,props.token,state.codice,props.id_company)\r\n            .then( response => {\r\n\r\n                if(autenticazione_fallita(response.data.messageCode)) {\r\n                    stopLoadingToast(loadingToast);\r\n                    getErrorToast(\"Sessione scaduta\");\r\n                    props.TotalReset();\r\n                    continueUpdating = false;\r\n                  }\r\n                  if(continueUpdating != false) {\r\n                    let token= props.token;\r\n                    if(renewToken(props.token, response.data.token)){\r\n                      props.UpdateToken(response.data.token);\r\n                      token = response.data.token;\r\n                    }\r\n\r\n                    props.UpdateClientLicenses(state.classe,props.client.id_client)\r\n                    stopLoadingToast(loadingToast);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                stopLoadingToast(loadingToast);\r\n                getErrorToast(String(error));\r\n            })\r\n        } else {\r\n            getErrorToast(String(\"Selezionare una licenza\"))\r\n        } \r\n        \r\n    }\r\n\r\n    return (\r\n        (isOdd(props.idx))\r\n        ?\r\n            <>\r\n                <Col className=\"oddColor vertical-aligner col-md-3 col-xs-3\">\r\n                    <h4>{props.client.nome_client}</h4>\r\n                </Col>\r\n                <Col className=\"oddColor col-md-4 col-xs-4\">\r\n                    {props.client.classe_licenza.map( classe_licenza => props.options.map( option => (option.value == classe_licenza) ? <div>{option.label}</div> : <></>))}\r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-3 col-xs-3\">\r\n                    <select onChange={_licenseChange} >\r\n                        <option value={0} selected hidden disabled>Seleziona una licenza</option>\r\n                        {props.company_template.licensesList.filter( licenza => !props.client.classe_licenza.includes(licenza.classe)).map((license,i) => <option value={i}>{license.tipologia}</option>)}   \r\n                    </select>\r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button onClick={_assignLicense} class=\"btn btn-primary\" type=\"button\" >Assegna</button>          \r\n                </Col>\r\n            </>\r\n        :\r\n            <>\r\n                <Col className=\"evenColor vertical-aligner col-md-3 col-xs-3\">\r\n                    <h4>{props.client.nome_client}</h4>\r\n                </Col>\r\n                <Col className=\"evenColor col-md-4 col-xs-4\">\r\n                    {props.client.classe_licenza.map( classe_licenza => props.options.map( option => (option.value == classe_licenza) ? <div>{option.label}</div> : <></>))}\r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-3 col-xs-3\">\r\n                    <select onChange={_licenseChange} >\r\n                        <option value={0} selected hidden disabled>Seleziona una licenza</option>\r\n                        {props.company_template.licensesList.filter( licenza => !props.client.classe_licenza.includes(licenza.classe)).map((license,i) => <option value={i}>{license.tipologia}</option>)}   \r\n                    </select>\r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button onClick={_assignLicense} class=\"btn btn-primary\" type=\"button\" >Assegna</button>          \r\n                </Col>\r\n            </>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n  )(AssignLicenses);","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Box, Col } from 'adminlte-2-react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport { addLicense, removeLicense, totalReset, updateCompanyTemplateLicenze, updateToken } from '../ActionCreator';\r\nimport PopUp from './PopUp';\r\nimport { _LICENZE } from '../Constants';\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from '../toastManager';\r\nimport { _compraLicenza, _getLicenzeShallow } from '../callableRESTs';\r\nimport { Row } from 'react-bootstrap';\r\nimport AssignLicenses from \"./AssignLicenses\";\r\nimport { autenticazione_fallita, renewToken } from '../Tools';\r\n\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddLicense: (license) => {\r\n      dispatch(addLicense(license))\r\n    },\r\n    RemoveLicense: (license) => {\r\n      dispatch(removeLicense(license))\r\n    },\r\n    CompanyTemplateLicenze: (lista_licenze) => {\r\n      dispatch(updateCompanyTemplateLicenze(lista_licenze))\r\n    },\r\n    TotalReset: () => {\r\n      dispatch(totalReset());\r\n    },\r\n    UpdateToken: (token) => {\r\n      dispatch(updateToken(token));\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    options: [{name: _LICENZE.SISTEMA_OPERATIVO.label, id: _LICENZE.SISTEMA_OPERATIVO.tipo},\r\n              {name: _LICENZE.BACKUP.label, id: _LICENZE.BACKUP.tipo},\r\n              {name: _LICENZE.RETE.label, id: _LICENZE.RETE.tipo},\r\n              {name: _LICENZE.VULNERABILITA.label, id: _LICENZE.VULNERABILITA.tipo},\r\n              {name: _LICENZE.ANTIVIRUS.label, id: _LICENZE.ANTIVIRUS.tipo}\r\n    ],\r\n    selectedValue: state.licensesList,\r\n    licensesList: state.licensesList,\r\n    token: state.token,\r\n    id_company: state.id_company,\r\n    company_template: state.company_template,\r\n    client_list: state.client_list\r\n  }\r\n);\r\n\r\nconst isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\nconst LicensesList = (props) => {\r\n\r\n  useEffect( () => {\r\n    //get list of licenses types\r\n    //const loadingToast = getLoadingToast(\"Caricamento...\");\r\n    /*return _service()\r\n    .then(function (response) {\r\n      stopLoadingToast(loadingToast);\r\n      getSuccessToast(response.data.message);\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });*/\r\n  }, []);\r\n\r\n  const [state, setState] = React.useState({\r\n    selectedValue: 0,\r\n    selectedLicense: []\r\n  })\r\n\r\n  const clickService = () => {\r\n    console.log(state.selectedValue);\r\n    let continueUpdating = true;\r\n    //buy new license\r\n    const loadingToast = getLoadingToast(\"Acquistando la licenza...\");\r\n    return _compraLicenza(props.token, props.id_company, state.selectedValue)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n        getSuccessToast(response.data.message);\r\n        //getLicenze\r\n        _getLicenzeShallow(props.id_company, token)\r\n        .then(function (response) {\r\n          props.CompanyTemplateLicenze(response.data.licenzeShallow)\r\n          stopLoadingToast(loadingToast);\r\n        })\r\n        .catch(function (error) {\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(error));\r\n        })\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  const _onSelect = (e) => {\r\n    setState(() => {\r\n      return {...state,selectedValue: e.value };  \r\n    });\r\n  }\r\n\r\n  const getChilds = () => {\r\n    let childList = [];\r\n    let options = [\r\n      { value: '1', label: 'SISTEMA OPERATIVO' },\r\n      { value: '2', label: 'BACKUP' },\r\n      { value: '3', label: 'ANTIVIRUS' },\r\n      { value: '4', label: 'RETE' },\r\n      { value: '5', label: 'VUNERABILITA\\'' },\r\n    ];\r\n    childList = [\r\n    <>\r\n      <Col xs={8} md={6}><strong><h4>CODICE LICENZA</h4></strong></Col>\r\n      <Col xs={4} md={6}><strong><h4>CATEGORIA</h4></strong></Col>\r\n      {props.company_template.licensesList.map((license, i) => {\r\n        return (isOdd(i)) \r\n        ? <><Col xs={8} md={6} className=\"oddColor vertical-aligner col-md-6 col-xs-8\">{license.codice}</Col><Col className=\"oddColor vertical-aligner col-md-6 col-xs-4\" xs={4} md={6} key={i}>{license.tipologia}</Col></>\r\n        : <><Col xs={8} md={6} className=\"evenColor vertical-aligner col-md-6 col-xs-8\">{license.codice}</Col><Col className=\"evenColor vertical-aligner col-md-6 col-xs-4\" xs={4} md={6} key={i}>{license.tipologia}</Col></>\r\n      })\r\n      }\r\n      <Col xs={12} md={12}><p></p></Col>\r\n      <Col xs={8} md={6}>\r\n        {state.selectedValue==0\r\n          ? <button className=\"btn btn-primary\" onClick={() => clickService()} disabled>Acquista licenza</button>\r\n          : <button className=\"btn btn-primary\" onClick={() => clickService()}>Acquista licenza</button>\r\n        }\r\n      </Col>\r\n      <Col xs={4} md={6}>\r\n        <Dropdown options={options} onChange={_onSelect} placeholder=\"Seleziona una tipologia\" />\r\n      </Col>\r\n\r\n      <Col xs={12} md={12}><strong><h4>ASSEGNA LICENZE</h4></strong></Col>\r\n      <Row>\r\n        <Col xs={3} md={3}><h4>NOME CLIENT</h4></Col>\r\n        <Col xs={4} md={4}><h4>LICENZE IN USO</h4></Col>\r\n      </Row>\r\n\r\n\r\n      {props.client_list.map( (client,i) => {        \r\n        return(\r\n          <AssignLicenses key={i} idx={i} client={client} options={options} />\r\n        )\r\n      })}\r\n    </>\r\n    ]\r\n    return childList;\r\n  }\r\n\r\n  const onSelect = (selectedList, selectedItem) => {\r\n    props.AddLicense(selectedList);\r\n  }\r\n  \r\n  const onRemove = (selectedList, removedItem) => {\r\n    props.RemoveLicense(selectedList);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <Box title={props.title} type=\"primary\" collapsable footer={<span href=\"#\" className=\"small-box-footer\"><PopUp title=\"Gestione delle licenze\" linkClass={\"clickable\"} childs={getChilds()} action={()=>(console.log(\"action\"))}/></span>}>\r\n      <Multiselect\r\n        placeholder=\"Filtra per tipologia\"\r\n        emptyRecordMsg=\"Nessun filtro disponibile\"\r\n        hidePlaceholder=\"true\"\r\n        closeIcon=\"cancel\"\r\n        options={props.options} // Options to display in the dropdown\r\n        selectedValues={props.selectedValue} // Preselected value to persist in dropdown\r\n        onSelect={onSelect} // Function will trigger on select event\r\n        onRemove={onRemove} // Function will trigger on remove event\r\n        displayValue=\"name\" // Property name to display in the dropdown options\r\n      />\r\n      <br />\r\n      {props.company_template.licensesList.map((license,i) => {\r\n        return (JSON.stringify(props.licensesList).toUpperCase().includes(license.tipologia.toUpperCase())) \r\n        ? \r\n          <div key={i}>\r\n            {/* {console.log(JSON.stringify(props.selectedValue)+\" \"+license.tipologia+\" \"+license.codice)} */}\r\n            <Col xs={8} md={6}>{license.codice}</Col>\r\n            <Col xs={4} md={6}>{license.tipologia}</Col>\r\n          </div>\r\n        : <></>\r\n      })\r\n      }\r\n      {(JSON.stringify(props.licensesList)===\"[]\")\r\n        ? <Col xs={12}>Nessuna licenza trovata in base ai filtri selezionati.</Col>\r\n        : <></>\r\n      }     \r\n    </Box>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(LicensesList);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Col, Box } from 'adminlte-2-react';\r\nimport Dropdown from 'react-dropdown';\r\nimport PopUp from './PopUp';\r\nimport { _cancellazioneSede, _editCompanyData, _getNomiSedi, _inserimentoSede } from '../callableRESTs';\r\nimport { fixSedi, listaNomiSedi, totalReset, updateCompanyData, updateToken } from '../ActionCreator';\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from '../toastManager';\r\nimport { dispatch } from 'react-hot-toast';\r\nimport { _MSGCODE } from '../Constants';\r\nimport { autenticazione_fallita, renewToken } from '../Tools';\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    UpdateCompanyData: (nome_company, email, emailNotify, token) => {\r\n      dispatch(updateCompanyData(nome_company, email, emailNotify, token))\r\n    },\r\n    UpdateListaSedi: (listaSedi, token, listaId) => {\r\n      dispatch(listaNomiSedi(listaSedi, token, listaId))\r\n    },\r\n    UpdateToken: (token) => {\r\n      dispatch(updateToken(token));\r\n    },\r\n    TotalReset: () => {\r\n      dispatch(totalReset())\r\n    },\r\n    FixSedi: (client_list, lista_nomi_sedi, lista_id_sedi) => {\r\n      let tmp_list = client_list;\r\n      let tmp_list2 = []\r\n      tmp_list.map(tmp_client => {\r\n        lista_nomi_sedi.map((sede,i) => {\r\n          if((tmp_client.sede === sede) || (tmp_client.sede === lista_id_sedi[i])){\r\n            tmp_client.sede = String(lista_id_sedi[i]);\r\n            tmp_list2.push(tmp_client)\r\n          }\r\n        })\r\n      })\r\n      dispatch(fixSedi(tmp_list2))\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    client_list: state.client_list,\r\n    nome_company: state.company_template.company_data.ragione_sociale,\r\n    token: state.token,\r\n    logged: state.logged,\r\n    id_company: state.id_company,\r\n    emailNotify: state.company_template.company_data.emailNotify,\r\n    email: state.company_template.company_data.email,\r\n    lista_sedi: state.company_template.company_data.n_sedi,\r\n    listaNomiSedi: state.lista_nomi_sedi,\r\n    lista_id_sedi: state.lista_id_sedi\r\n  }\r\n);\r\n\r\n\r\n\r\nconst UserData = (props) => {\r\n\r\n\r\n  const [state, setState] = React.useState({\r\n    emailLogin: \"\",\r\n    emailLogin2: \"\",\r\n    pswLogin: \"\",\r\n    nuovaSede: \"\",\r\n    sedeDaCancellare: \"\"\r\n  })\r\n\r\n  const clickService = () => {\r\n    let continueUpdating = true;\r\n    let email = (state.emailLogin==\"\") ? props.email : state.emailLogin;\r\n    let emailAlert = (state.emailLogin2==\"\") ? props.emailNotify : state.emailLogin2;\r\n    let ragioneSociale = (state.pswLogin==\"\") ? props.nome_company : state.pswLogin;\r\n    const loadingToast = getLoadingToast(\"Modificando i dati...\");\r\n    return _editCompanyData(props.id_company, props.token, email, emailAlert, ragioneSociale)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n        stopLoadingToast(loadingToast);\r\n        let token1 = (response.data.token==\"\" || response.data.token==null) ? token : response.data.token;\r\n        props.UpdateCompanyData(ragioneSociale, email, emailAlert, token1);\r\n        getSuccessToast(\"Dati modificati correttamente.\");\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  const clickServiceAggiungi = () => {\r\n    let continueUpdating = true;\r\n    let nome = state.nuovaSede;\r\n    const loadingToast = getLoadingToast(\"Aggiungendo una nuova sede...\");\r\n    return _inserimentoSede( props.token, props.id_company, nome)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n        _getNomiSedi(token, props.id_company)\r\n        .then(function (response) {\r\n          stopLoadingToast(loadingToast);\r\n          let token1 = (response.data.token==\"\" || response.data.token==null) ? token : response.data.token;\r\n          let listaNomi = [];\r\n          let listaSedi = [];\r\n          response.data.sedi.map((sede) => {\r\n            listaNomi.push(sede.substring(sede.indexOf(\",\") + 1, sede.length));\r\n            listaSedi.push(sede.substring(0,sede.indexOf(\",\")));\r\n          })\r\n          \r\n          let myPromise = new Promise(function (myResolve,myReject) {\r\n            props.UpdateListaSedi(listaNomi, token1, listaSedi)\r\n            myResolve();\r\n          });\r\n          myPromise.then(\r\n            function (value) {    \r\n              let tmp_list = props.client_list;\r\n              let tmp_list2 = []\r\n              tmp_list.map(tmp_client => {\r\n                props.listaNomiSedi.map((sede,i) => {\r\n                  if((tmp_client.sede === sede) || (tmp_client.sede === props.lista_id_sedi[i])){\r\n                    tmp_client.sede = String(props.lista_id_sedi[i]);\r\n                    tmp_list2.push(tmp_client)\r\n                  }\r\n                })\r\n              })\r\n              props.FixSedi(tmp_list2, props.listaNomiSedi, props.lista_id_sedi);\r\n            },\r\n            function (error) {}\r\n          )\r\n          getSuccessToast(\"Sede aggiunta correttamente.\");\r\n        })\r\n        .catch(function (error) {\r\n          getErrorToast(String(error));\r\n        });\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n  \r\n  const clickServiceCancella = (evt) => {\r\n    let continueUpdating = true;\r\n    evt.preventDefault()\r\n    let nome = state.sedeDaCancellare;\r\n    const loadingToast = getLoadingToast(\"Rimuovendo la sede...\");\r\n    return _cancellazioneSede( props.token, props.id_company, nome)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n\r\n        if(response.data.messageCode != _MSGCODE.NO_ERR){\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(response.data.message))\r\n        } else {\r\n          _getNomiSedi(props.token, props.id_company)\r\n          .then(function (response) {\r\n            stopLoadingToast(loadingToast);\r\n            let token = (response.data.token==\"\" || response.data.token==null) ? props.token : response.data.token;\r\n            let listaNomi = [];\r\n            let listaSedi = [];\r\n            response.data.sedi.map((sede) => {\r\n              listaNomi.push(sede.substring(sede.indexOf(\",\") + 1, sede.length));\r\n              listaSedi.push(sede.substring(0,sede.indexOf(\",\")));\r\n            })\r\n            let myPromise = new Promise(function (myResolve,myReject) {\r\n              props.UpdateListaSedi(listaNomi, token, listaSedi)\r\n              myResolve();\r\n            });\r\n            myPromise.then(\r\n              function (value) {    \r\n                let tmp_list = props.client_list;\r\n                let tmp_list2 = []\r\n                tmp_list.map(tmp_client => {\r\n                  props.listaNomiSedi.map((sede,i) => {\r\n                    if((tmp_client.sede === sede) || (tmp_client.sede === props.lista_id_sedi[i])){\r\n                      tmp_client.sede = String(props.lista_id_sedi[i]);\r\n                      tmp_list2.push(tmp_client)\r\n                    }\r\n                  })\r\n                })\r\n                props.FixSedi(tmp_list2, props.listaNomiSedi, props.lista_id_sedi);\r\n              },\r\n              function (error) {}\r\n            )\r\n            getSuccessToast(\"Sede rimossa correttamente.\");\r\n          })\r\n          .catch(function (error) {\r\n            getErrorToast(String(error));\r\n          });\r\n        }\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  // const clickServiceCancella = () => {\r\n  //   let nome = state.sedeDaCancellare;\r\n  //   const loadingToast = getLoadingToast(\"Eliminando una sede...\");\r\n  //   return _cancellazioneSede( props.token, props.id_company, nome)\r\n  //   .then(function (response) {\r\n  //       stopLoadingToast(loadingToast);\r\n  //       let token = (response.data.token==\"\" || response.data.token==null) ? props.token : response.data.token;\r\n  //       //props.UpdateCompanyData(ragioneSociale, email, emailAlert, token);\r\n  //       let newList = state.listaSedi.pop(state.sedeDaCancellare);\r\n  //       setState((previousState) => {\r\n  //         return { ...previousState, listaSedi: newList };  \r\n  //       });\r\n  //       getSuccessToast(\"Sede eliminata correttamente.\");\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //     stopLoadingToast(loadingToast);\r\n  //     getErrorToast(String(error));\r\n  //   });\r\n  // }\r\n\r\n\r\n\r\n  /**\r\n   * handle email login and map it to local state emailLogin\r\n   * @param {*} evt \r\n   */\r\n  const handleEmailLogin = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, emailLogin: evt.target.value };  \r\n    });\r\n  }\r\n\r\n  /**\r\n   * handle email login and map it to local state emailLogin\r\n   * @param {*} evt \r\n   */\r\n    const handleEmailLogin2 = (evt) => {\r\n      setState((previousState) => {\r\n        return { ...previousState, emailLogin2: evt.target.value };  \r\n      });\r\n    }\r\n\r\n  /**\r\n   * handle password login and map it to local state pswLogin\r\n   * @param {*} evt \r\n   */\r\n  const handlePswLogin = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, pswLogin: evt.target.value };\r\n    });\r\n  }\r\n\r\n  /**\r\n * handle password login and map it to local state pswLogin\r\n * @param {*} evt \r\n */\r\n    const handleNuovaSede = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, nuovaSede: evt.target.value };\r\n    });\r\n  }\r\n\r\n    /**\r\n * handle password login and map it to local state pswLogin\r\n * @param {*} evt \r\n */\r\n    const handleRimuoviSede = (evt) => {\r\n      setState((previousState) => {\r\n        return { ...previousState, sedeDaCancellare: evt.value };\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n      _getNomiSedi(props.token, props.id_company)\r\n      .then(function (response) {\r\n        let token = (response.data.token==\"\" || response.data.token==null) ? props.token : response.data.token;\r\n        let listaNomi = [];\r\n        let listaSedi = [];\r\n        response.data.sedi.map((sede) => {\r\n          listaNomi.push(sede.substring(sede.indexOf(\",\") + 1, sede.length));\r\n          listaSedi.push(sede.substring(0,sede.indexOf(\",\")));\r\n          \r\n        })\r\n        let myPromise = new Promise(function (myResolve,myReject) {\r\n          props.UpdateListaSedi(listaNomi, token, listaSedi)\r\n          myResolve();\r\n        });\r\n        myPromise.then(\r\n          function (value) {    \r\n            let tmp_list = props.client_list;\r\n            let tmp_list2 = []\r\n            props.client_list.map(tmp_client => {\r\n              props.listaNomiSedi.map((sede,i) => {\r\n                if((tmp_client.sede === sede) || (tmp_client.sede === props.lista_id_sedi[i])){\r\n                  tmp_client.sede = String(props.lista_id_sedi[i]);\r\n                  tmp_list2.push(tmp_client)\r\n                }\r\n              })\r\n            })\r\n            props.FixSedi(tmp_list2, props.listaNomiSedi, props.lista_id_sedi);\r\n          },\r\n          function (error) {}\r\n        )\r\n      })\r\n      .catch(function (error) {\r\n        getErrorToast(String(error));\r\n      });\r\n    },[])\r\n  \r\n  const getChilds = () => {\r\n    let childList = [];\r\n    childList = [\r\n      <>\r\n        <div className=\"col-md-6 col-xs-12\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"LoginEmail1\">Indirizzo email</label>\r\n              <input type=\"email\" value={state.emailLogin} className=\"form-control\" id=\"LoginEmail1\" aria-describedby=\"emailHelp\" placeholder={props.email} onChange={handleEmailLogin}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"LoginEmail2\">Indirizzo email per le comunicazioni</label>\r\n              <input type=\"email\" value={state.emailLogin2} className=\"form-control\" id=\"LoginEmail2\" aria-describedby=\"emailHelp\" placeholder={props.emailNotify} onChange={handleEmailLogin2}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"LoginPassword1\">Ragione Sociale</label>\r\n              <input value={state.pswLogin} className=\"form-control\" id=\"LoginPassword1\" placeholder={props.ragioneSociale} onChange={handlePswLogin} />\r\n            </div>\r\n          </form>\r\n          <center><button className=\"btn btn-primary\" onClick={() => clickService()}>Modifica</button></center>\r\n        </div>\r\n        <div className=\"col-md-6 col-xs-12\">\r\n          <form>\r\n            <div className=\"col-md-12 col-xs-12\">\r\n              <label>Lista delle sedi</label>\r\n            </div>\r\n            <div className=\"form-group col-md-8 col-xs-8\">\r\n              <Dropdown onChange={handleRimuoviSede} options={props.listaNomiSedi} placeholder=\"Seleziona una sede\" />           \r\n            </div>\r\n            <div className=\"col-md-4 col-xs-4\">\r\n            <button className=\"btn btn-primary\" onClick={(evt) => clickServiceCancella(evt)}>Rimuovi</button>\r\n            </div>\r\n          </form>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"AddPlace\">Aggiungi una nuova sede</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"AddPlace\" aria-describedby=\"AddPlace\"  onChange={handleNuovaSede}/>\r\n            </div>\r\n          </form>\r\n          <center><button className=\"btn btn-primary\" onClick={() => clickServiceAggiungi()}>Aggiungi</button></center>\r\n        </div>\r\n      </>\r\n    ]\r\n    return childList;\r\n  }\r\n  return (\r\n    <Box title=\"Dati aziendali\" type=\"primary\" collapsable footer={<span href=\"#\" className=\"small-box-footer\"><PopUp title=\"Modifica dati aziendali\" linkClass={\"clickable\"} childs={getChilds()} action={()=>(console.log(\"action\"))}/></span>}>\r\n      <Col md={12} xs={12}>\r\n        <h4><b>Indirizzo email: </b>{props.email}</h4>\r\n        <h4><b>Indirizzo email per le comunicazioni: </b>{props.emailNotify}</h4>\r\n        <h4><b>Ragione sociale: </b>{props.ragioneSociale}</h4>\r\n        <h4><b>Sedi registrate: </b>{props.lista_sedi - 1}</h4>\r\n        <h4><b>Chiave di registrazione: </b>{props.chiave}</h4>\r\n      </Col>\r\n    </Box>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UserData);","import React, { useState} from \"react\"\r\nimport { Col } from \"adminlte-2-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from \"../toastManager\";\r\nimport { _getAllNomiAlertConfigurazione, _updateMonitoraAllServices } from \"../callableRESTs\";\r\nimport { _LICENZE } from \"../Constants\";\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\n const mapDispatchToProps = dispatch => ({});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    token: state.token,\r\n    id_company: state.id_company,\r\n    lista_nomi_sedi: state.lista_nomi_sedi,\r\n    lista_id_sedi: state.lista_id_sedi,\r\n});\r\n\r\nconst ClientHandlerRowServices = (props) => {\r\n\r\n    const licenze = [\r\n        {\r\n            tipo:1,\r\n            label:\"Sistema operativo\"\r\n        },\r\n        {\r\n            tipo : \"2\",\r\n            label : \"Backup\"\r\n        },\r\n        {\r\n            tipo : \"3\",\r\n            label : \"Antivirus\"\r\n        },\r\n        {\r\n            tipo : \"4\",\r\n            label : \"Rete\"\r\n        },\r\n        {\r\n            tipo : \"5\",\r\n            label : \"Vulnerabilita\\'\"\r\n        }\r\n    ]\r\n    \r\n    const tipologie = [\r\n        {\r\n            id_tipologia: 1,\r\n            tipologia:\"Client\"\r\n        },\r\n        {\r\n            id_tipologia: 2,\r\n            tipologia:\"Server\"\r\n        }\r\n    ];\r\n\r\n    const [selectState, setSelectState] = useState({\r\n        tipologia: null,\r\n        licenza: null,\r\n        sede: null\r\n    })\r\n\r\n    const isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\n    const tipologiaChange = (e) => {\r\n        setSelectState( {\r\n            ...selectState,\r\n            tipologia: e.target.value\r\n        })\r\n    }\r\n\r\n    const licenzaChange = (e) => {\r\n        setSelectState( {\r\n            ...selectState,\r\n            licenza: e.target.value\r\n        })\r\n    }\r\n    const sedeChange = (e) => {\r\n        setSelectState( {\r\n            ...selectState,\r\n            sede: e.target.value\r\n        })\r\n    }\r\n\r\n    const updateMonitora = (monitora) => {\r\n        // console.log(selectState)\r\n        const loadingToast = getLoadingToast(\"Modifica monitoraggio servizi...\");\r\n        _updateMonitoraAllServices(props.id_company,props.token,selectState.tipologia,selectState.licenza,selectState.sede,props.nome_servizio,monitora)\r\n        .then( response => {\r\n            stopLoadingToast(loadingToast);\r\n            getSuccessToast(response.data.message);\r\n        })\r\n        .catch( error => {\r\n            stopLoadingToast(loadingToast);\r\n            getErrorToast(String(error));\r\n        })\r\n    }\r\n\r\n    return(\r\n        \r\n        (isOdd(props.index))\r\n        ?\r\n            <>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><h5>{props.nome_servizio}</h5></Col>\r\n                <Col className=\"oddColor noHorizontalPadding vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={tipologiaChange}>\r\n                        <option selected hidden disabled>Seleziona tipologia</option>\r\n                        {tipologie.map( tipologia => <option value={tipologia.id_tipologia}>{tipologia.tipologia}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={licenzaChange}>\r\n                        <option selected hidden disabled>Seleziona licenza</option>\r\n                        {licenze.map( licenza => <option value={licenza.tipo}>{licenza.label}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"oddColor noHorizontalPadding vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={sedeChange}>\r\n                        <option selected hidden disabled>Seleziona sede</option>\r\n                        {props.lista_nomi_sedi.map( (nome_sede,i) => <option value={props.lista_id_sedi[i]} >{nome_sede}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button className=\"btn btn-primary\" onClick={()=>updateMonitora(true)}>Aggiungi a tutti</button>    \r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button className=\"btn btn-primary\" onClick={()=>updateMonitora(false)}>Rimuovi a tutti</button>\r\n                </Col>\r\n            </>\r\n        :\r\n            <>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><h5>{props.nome_servizio}</h5></Col>\r\n                <Col className=\"evenColor noHorizontalPadding vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={tipologiaChange}>\r\n                        <option selected hidden disabled>Seleziona tipologia</option>\r\n                        {tipologie.map( tipologia => <option value={tipologia.id_tipologia}>{tipologia.tipologia}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={licenzaChange}>\r\n                        <option selected hidden disabled>Seleziona licenza</option>\r\n                        {licenze.map( licenza => <option value={licenza.tipo}>{licenza.label}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"evenColor noHorizontalPadding vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={sedeChange}>\r\n                        <option selected hidden disabled>Seleziona sede</option>\r\n                        {props.lista_nomi_sedi.map( (nome_sede,i) => <option value={props.lista_id_sedi[i]} >{nome_sede}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button className=\"btn btn-primary\" onClick={()=>updateMonitora(true)}>Aggiungi a tutti</button>    \r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button className=\"btn btn-primary\" onClick={()=>updateMonitora(false)}>Rimuovi a tutti</button>\r\n                </Col>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n  )(ClientHandlerRowServices);","import React, { useState} from \"react\"\r\nimport { Col } from \"adminlte-2-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from \"../toastManager\";\r\nimport { _updateMonitoraAllAlerts, _updateMonitoraAllServices } from \"../callableRESTs\";\r\nimport { Backend2FrontendAlertConverter } from \"../Tools\";\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\n const mapDispatchToProps = dispatch => ({});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    token: state.token,\r\n    id_company: state.id_company,\r\n    lista_nomi_sedi: state.lista_nomi_sedi,\r\n    lista_id_sedi: state.lista_id_sedi\r\n});\r\n\r\nconst ClientHandlerRowAlert = (props) => {\r\n\r\n    const licenze = [\r\n        {\r\n            tipo:1,\r\n            label:\"Sistema operativo\"\r\n        },\r\n        {\r\n            tipo : \"2\",\r\n            label : \"Backup\"\r\n        },\r\n        {\r\n            tipo : \"3\",\r\n            label : \"Antivirus\"\r\n        },\r\n        {\r\n            tipo : \"4\",\r\n            label : \"Rete\"\r\n        },\r\n        {\r\n            tipo : \"5\",\r\n            label : \"Vulnerabilita\\'\"\r\n        }\r\n    ]\r\n    \r\n    const tipologie = [\r\n        {\r\n            id_tipologia: 1,\r\n            tipologia:\"Client\"\r\n        },\r\n        {\r\n            id_tipologia: 2,\r\n            tipologia:\"Server\"\r\n        }\r\n    ];\r\n\r\n    const [selectState, setSelectState] = useState({\r\n        tipologia: null,\r\n        licenza: null,\r\n        sede: null\r\n    })\r\n\r\n    const isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\n    const tipologiaChange = (e) => {\r\n        setSelectState( {\r\n            ...selectState,\r\n            tipologia: e.target.value\r\n        })\r\n    }\r\n\r\n    const licenzaChange = (e) => {\r\n        setSelectState( {\r\n            ...selectState,\r\n            licenza: e.target.value\r\n        })\r\n    }\r\n    const sedeChange = (e) => {\r\n        setSelectState( {\r\n            ...selectState,\r\n            sede: e.target.value\r\n        })\r\n    }\r\n\r\n    const updateMonitora = (monitora) => {\r\n        // console.log(selectState)\r\n        const loadingToast = getLoadingToast(\"Modifica monitoraggio servizi...\");\r\n        _updateMonitoraAllAlerts(props.id_company,props.token,selectState.tipologia,selectState.licenza,selectState.sede,props.tipologia_alert,monitora)\r\n        .then( response => {\r\n            stopLoadingToast(loadingToast);\r\n            getSuccessToast(response.data.message);\r\n        })\r\n        .catch( error => {\r\n            stopLoadingToast(loadingToast);\r\n            getErrorToast(String(error));\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        \r\n        (isOdd(props.index))\r\n        ?\r\n            <>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\"><h5>{Backend2FrontendAlertConverter(props.tipologia_alert)}</h5></Col>\r\n                <Col className=\"oddColor noHorizontalPadding vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={tipologiaChange}>\r\n                        <option selected hidden disabled>Seleziona tipologia</option>\r\n                        {tipologie.map( tipologia => <option value={tipologia.id_tipologia}>{tipologia.tipologia}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={licenzaChange}>\r\n                        <option selected hidden disabled>Seleziona licenza</option>\r\n                        {licenze.map( licenza => <option value={licenza.tipo}>{licenza.label}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"oddColor noHorizontalPadding vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={sedeChange}>\r\n                        <option selected hidden disabled>Seleziona sede</option>\r\n                        {props.lista_nomi_sedi.map( (nome_sede,i) => <option value={props.lista_id_sedi[i]}>{nome_sede}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button className=\"btn btn-primary\" onClick={()=> updateMonitora(true)}>Aggiungi a tutti</button>    \r\n                </Col>\r\n                <Col className=\"oddColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button className=\"btn btn-primary\" onClick={()=> updateMonitora(false)}>Rimuovi a tutti</button>\r\n                </Col>\r\n            </>\r\n        :\r\n            <>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\"><h5>{Backend2FrontendAlertConverter(props.tipologia_alert)}</h5></Col>\r\n                <Col className=\"evenColor noHorizontalPadding vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={tipologiaChange}>\r\n                        <option selected hidden disabled>Seleziona tipologia</option>\r\n                        {tipologie.map( tipologia => <option value={tipologia.id_tipologia}>{tipologia.tipologia}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={licenzaChange}>\r\n                        <option selected hidden disabled>Seleziona licenza</option>\r\n                        {licenze.map( licenza => <option value={licenza.tipo}>{licenza.label}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"evenColor noHorizontalPadding vertical-aligner col-md-2 col-xs-2\">\r\n                    <select onChange={sedeChange}>\r\n                        <option selected hidden disabled>Seleziona sede</option>\r\n                        {props.lista_nomi_sedi.map( (nome_sede,i) => <option value={props.lista_id_sedi[i]}>{nome_sede}</option>)}\r\n                    </select>\r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button className=\"btn btn-primary\" onClick={()=> updateMonitora(true)}>Aggiungi a tutti</button>    \r\n                </Col>\r\n                <Col className=\"evenColor vertical-aligner col-md-2 col-xs-2\">\r\n                    <button className=\"btn btn-primary\" onClick={()=> updateMonitora(false)}>Rimuovi a tutti</button>\r\n                </Col>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n  )(ClientHandlerRowAlert);","import React, { useEffect, useState } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { _changeMailInterval, _getMailInterval } from \"../callableRESTs\";\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from \"../toastManager\";\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\n const mapDispatchToProps = dispatch => ({});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    token: state.token,\r\n    id_company: state.id_company,\r\n    lista_nomi_sedi: state.lista_nomi_sedi\r\n});\r\n\r\nconst SelectMailInterval = (props) => {\r\n\r\n    const [state,setState] = useState();\r\n\r\n    useEffect(() => {\r\n        const loadingToast = getLoadingToast(\"Caricamento...\");\r\n        _getMailInterval(props.token,props.id_company)\r\n        .then( response => {\r\n            setState(response.data.mailInterval);\r\n            stopLoadingToast(loadingToast);\r\n        })\r\n        .catch( error => {\r\n            stopLoadingToast(loadingToast);\r\n            getErrorToast(String(error));\r\n        })\r\n    },[])\r\n\r\n    const changeMailInterval = (e) => {\r\n        const loadingToast = getLoadingToast(\"Modifica intervallo mail...\");\r\n\r\n        let stopInterval = false;\r\n        if(e.target.value == 0){\r\n            stopInterval = true;\r\n        }\r\n        if(e.target.value != -1) {\r\n            _changeMailInterval(props.token,e.target.value,props.id_company,stopInterval)\r\n            .then( response => {\r\n                getSuccessToast(\"Intervallo mail cambiato correttamente\");\r\n                stopLoadingToast(loadingToast);\r\n            })\r\n            .catch( error => {\r\n                stopLoadingToast(loadingToast);\r\n                getErrorToast(String(error));\r\n            })\r\n        } else {\r\n            stopLoadingToast(loadingToast);\r\n        }\r\n        \r\n    }\r\n\r\n    //TODO: AGGIUNGERE COLONNE INTERVALLO_MAIL E LAST_MAIL_DATE_AND_TIME A DB \r\n\r\n    return (    \r\n        <Col xs={6} md={6}>\r\n            <form onChange={changeMailInterval}>\r\n                <div>\r\n                    <input type=\"radio\" value={0} id=\"noMail\" name=\"interval\" checked={state==0} onChange={(e) => {setState(e.target.value)}}/>\r\n                    <label for=\"noMail\">Non desidero ricevere mail</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" value={60000*60*24} id=\"1gg\" name=\"interval\" checked={state==60000*60*24} onChange={(e) => {setState(e.target.value)}}/>\r\n                    <label for=\"1gg\">1 giorno</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" value={60000*60*24*3} id=\"3gg\" name=\"interval\" checked={state==60000*60*24*3} onChange={(e) => {setState(e.target.value)}}/>\r\n                    <label for=\"3gg\">3 giorni</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" value={60000*60*24*7} id=\"1sett\" name=\"interval\" checked={state==60000*60*24*7} onChange={(e) => {setState(e.target.value)}}/>\r\n                    <label for=\"1sett\">1 settimana</label>\r\n                </div>\r\n            </form>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n  )(SelectMailInterval);","import React, { useState } from \"react\";\r\nimport { Box, Col, Slider } from \"adminlte-2-react\";\r\nimport { connect } from \"react-redux\";\r\nimport PopUp from \"./PopUp\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { _changeMailInterval, _getAllNomiAlertConfigurazione, _getAllServicesOfCompany } from \"../callableRESTs\";\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from \"../toastManager\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport ClientHandlerRowServices from \"./ClientHandlerRowServices\";\r\nimport ClientHandlerRowAlert from \"./ClientHandlerRowAlert\";\r\nimport SelectMailInterval from \"./SelectMailInterval\";\r\nimport { Backend2FrontendDateConverter } from \"../Tools\";\r\n\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\n const mapDispatchToProps = dispatch => ({});\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    token: state.token,\r\n    id_company: state.id_company,\r\n    lista_nomi_sedi: state.lista_nomi_sedi\r\n});\r\n\r\nconst ClientHandler = (props) => {\r\n\r\n    const [childs, setChilds] = useState([]);\r\n    const [interval, setInterval] = useState({interval:-1})\r\n\r\n    const openToggle = (id) => {\r\n        var elem = document.getElementsByClassName(\"arrowAccordion\"+id)[0];\r\n        elem.style.transform = \"rotate(90deg)\";\r\n        elem.style.transition = \"transform 1s ease\";\r\n        elem.style.display = \"inline-block\";\r\n    }\r\n    \r\n    const closeToggle = (id) => {\r\n        var elem = document.getElementsByClassName(\"arrowAccordion\"+id)[0];\r\n        elem.style.transform = \"rotate(0deg)\";\r\n        elem.style.transition = \"transform 1s ease\";\r\n        elem.style.display = \"inline-block\";\r\n    }\r\n\r\n    const getClientHandler = () => {\r\n        const loadingToast = getLoadingToast(\"Caricamento...\");\r\n        _getAllServicesOfCompany(props.id_company, props.token)\r\n        .then( response1 => {\r\n            _getAllNomiAlertConfigurazione(props.id_company, props.token)\r\n            .then( response2 => {\r\n                setChilds(renderChilds(response1.data.nomi_servizi,response2.data.tipologie_alert));\r\n                stopLoadingToast(loadingToast);\r\n            })\r\n            .catch( error => {\r\n                stopLoadingToast(loadingToast);\r\n                getErrorToast(String(error));\r\n            })\r\n        })\r\n        .catch( error => {\r\n            stopLoadingToast(loadingToast);\r\n            getErrorToast(String(error));\r\n        })\r\n    }\r\n\r\n\r\n    const renderChilds = (nomi_servizi, tipologie_alert) => {\r\n        const fields = [\"Alert\",\"Servizi di Windows\"];\r\n        let intestazione = [];\r\n        intestazione.push(\r\n            <Collapsible onOpen={()=>openToggle(\"Mail\")} onClose={()=>closeToggle(\"Mail\")} trigger={<div className=\"clickable\"><h4><span className={\"arrowAccordionMail\"}><FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} /></span> Gestione mail </h4></div>}>\r\n                <Col xs={6} md={6}><h5>Ricevi resoconto via mail ogni:</h5></Col>\r\n                <SelectMailInterval />\r\n            </Collapsible>\r\n        )\r\n        intestazione.push(fields.map( (field,j) => {\r\n            return (\r\n                <div className=\"popminwidth\">\r\n                    <Collapsible onOpen={()=>openToggle(j)} onClose={()=>closeToggle(j)} trigger={<div className=\"clickable\"><h4><span className={\"arrowAccordion\"+j}><FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} /></span> {field} </h4></div>}>\r\n                        <Row>\r\n                            {(field==\"Alert\")\r\n                            ?   <Col xs={2} md={2}><strong><h5>ALERT</h5></strong></Col>\r\n                            :   <Col xs={2} md={2}><strong><h5>SERVIZIO</h5></strong></Col>\r\n                            }    \r\n                            <><Col xs={2} md={2}><strong><h5>TIPOLOGIA</h5></strong></Col><Col xs={2} md={2}><strong><h5>LICENZA</h5></strong></Col><Col xs={2} md={2}><strong><h5>SEDE</h5></strong></Col></>\r\n                        </Row>\r\n                            {(field==\"Servizi di Windows\") \r\n                            ?\r\n                                nomi_servizi.map( (nome_servizio,i) => {\r\n                                    return <ClientHandlerRowServices nome_servizio={nome_servizio} index={i}/>\r\n                                })\r\n                            :\r\n                                tipologie_alert.map( (tipologia_alert,i) => {\r\n                                    return <ClientHandlerRowAlert tipologia_alert={tipologia_alert} index={i}/>\r\n                                })\r\n                            }\r\n                            \r\n                    </Collapsible>\r\n                </div>\r\n            )\r\n        }))\r\n        return intestazione;\r\n    }\r\n\r\n    return (\r\n        <Box title=\"Gestione dei monitoraggi:\" type=\"primary\" collapsable footer={<PopUp title=\"Gestione dei monitoraggi\" linkClass={\"clickable\"} childs={childs} action={()=>getClientHandler()}/>}>\r\n            <h4>Abilita o disabilita per diversi gruppi il monitoraggio di:</h4>\r\n            <h4 className=\"boxBody\"><strong>Alert</strong></h4>\r\n            <h4 className=\"boxBody\"><strong>Servizi di Windows</strong></h4>\r\n            <h4>Ultimo aggiornamento mail: {Backend2FrontendDateConverter(props.last_mail_date)}</h4>\r\n        </Box>\r\n    )\r\n} \r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n  )(ClientHandler);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { categoryVsPlace, updateCTcategoryVsPlace } from '../ActionCreator';\r\n\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    Toggle: (actual_state) => {\r\n      dispatch(updateCTcategoryVsPlace(!actual_state))\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    category_vs_place: state.company_template.category_vs_place\r\n  }\r\n);\r\n\r\nconst ToggleCategoryPlace = (props) => {\r\n  const onChangeValue = event => {\r\n    props.Toggle(props.category_vs_place);\r\n  }\r\n  return (\r\n    <>\r\n      <span onChange={onChangeValue}>\r\n        {props.category_vs_place\r\n        ? <>\r\n            <br /><input type=\"radio\" value=\"category\" name=\"toggleView\" checked=\"checked\"/> Tipologia dispositivi\r\n            <br /><input type=\"radio\" value=\"place\" name=\"toggleView\" /> Categoria\r\n          </>\r\n        :\r\n          <>\r\n            <br /><input type=\"radio\" value=\"category\" name=\"toggleView\"/> Tipologia dispositivi\r\n            <br /><input type=\"radio\" value=\"place\" name=\"toggleView\" checked=\"checked\"/> Categoria\r\n          </>}\r\n        \r\n      </span>\r\n  </>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ToggleCategoryPlace);","import React, { useEffect } from 'react';\r\nimport AdminLTE, { Sidebar } from 'adminlte-2-react';\r\nimport { connect } from 'react-redux';\r\nimport { Content, Row, Col, Box } from 'adminlte-2-react';\r\nimport { ModalProvider } from 'react-simple-hook-modal';\r\nimport TrafficLightButtons from './TrafficLightButtons';\r\nimport History from './History';\r\nimport LicensesList from './LicensesList';\r\nimport UserData from './UserData';\r\nimport ClientHandler from \"./ClientHandler\";\r\nimport ToggleCategoryPlace from './ToggleCategoryPlace';\r\nimport { _getCompanyHistory, _getCompanyOverview, _getLastMailDateAndTime, _getLicenzeShallow, _getNomiSedi } from '../callableRESTs';\r\nimport { getErrorToast, getLoadingToast, stopLoadingToast } from '../toastManager';\r\nimport { defaultUpdateInterval } from '../Constants';\r\nimport { updateCompanyTemplateLicenze, updateCompanyOverview, fixSedi, updateCompanyHistory, updateToken, totalReset, getLastMailDate } from '../ActionCreator';\r\nimport { autenticazione_fallita, renewToken } from '../Tools';\r\n\r\ndocument.body.classList.add('fixed');\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n  CompanyTemplateLicenze: (lista_licenze) => {\r\n    dispatch(updateCompanyTemplateLicenze(lista_licenze));\r\n  },\r\n  UpdateCompanyOverview: (n_errori, n_warnings, n_ok) => {\r\n    dispatch(updateCompanyOverview(n_errori, n_warnings, n_ok))\r\n  },\r\n  UpdateCompanyHistory: (history_data) => {\r\n    dispatch(updateCompanyHistory(history_data))\r\n  },\r\n  UpdateToken: (token) => {\r\n    dispatch(updateToken(token));\r\n  },\r\n  TotalReset: () => {\r\n    dispatch(totalReset());\r\n  },\r\n  GetLastMailDateAndTime: (last_mail_date) => {\r\n    dispatch(getLastMailDate(last_mail_date));\r\n  },\r\n  FixSedi: (client_list, lista_nomi_sedi, lista_id_sedi) => {\r\n    let tmp_list = client_list;\r\n    let tmp_list2 = []\r\n    tmp_list.map(tmp_client => {\r\n      lista_nomi_sedi.map((sede,i) => {\r\n        if((tmp_client.sede === sede) || (tmp_client.sede === lista_id_sedi[i])){\r\n          tmp_client.sede = String(lista_id_sedi[i]);\r\n          tmp_list2.push(tmp_client)\r\n        }\r\n      })\r\n    })\r\n    dispatch(fixSedi(tmp_list2))\r\n  }\r\n});\r\n  \r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    client_list: state.client_list,\r\n    nome_company: state.company_template.company_data.ragione_sociale,\r\n    email: state.company_template.company_data.email,\r\n    emailNotify: state.company_template.company_data.emailNotify,\r\n    token: state.token,\r\n    logged: state.logged,\r\n    id_company: state.id_company,\r\n    chiave_di_registrazione: state.company_template.company_data.chiave_di_registrazione,\r\n    // clientOverview: {\r\n    //   problems: 2,\r\n    //   warnings: 2,\r\n    //   running: 26\r\n    // },\r\n    apex: state.company_template.history,\r\n    company_template: state.company_template,\r\n    lista_nomi_sedi: state.lista_nomi_sedi,\r\n    lista_id_sedi: state.lista_id_sedi,\r\n    last_mail_date: state.company_template.last_mail_date\r\n  }\r\n\r\n);\r\n\r\nconst { Item } = Sidebar;\r\n\r\nconst DashboardHome = (props) => {\r\n\r\n  const updateData = (continueUpdating) => {\r\n    const loadingToast = getLoadingToast(\"Caricamento...\");\r\n    _getLicenzeShallow(props.id_company, props.token)\r\n    .then(function (response) {\r\n\r\n      if(autenticazione_fallita(response.data.messageCode)) {\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(\"Sessione scaduta\");\r\n        props.TotalReset();\r\n        continueUpdating = false;\r\n      }\r\n      if(continueUpdating != false) {\r\n        let token= props.token;\r\n        if(renewToken(props.token, response.data.token)){\r\n          props.UpdateToken(response.data.token);\r\n          token = response.data.token;\r\n        }\r\n        let tmp_list = props.client_list;\r\n        let tmp_list2 = []\r\n        tmp_list.map(tmp_client => {\r\n          props.lista_nomi_sedi.map((sede,i) => {\r\n            if((tmp_client.sede === sede) || (tmp_client.sede === props.lista_id_sedi[i])){\r\n              tmp_client.sede = String(props.lista_id_sedi[i]);\r\n              tmp_list2.push(tmp_client)\r\n            }\r\n          })\r\n        })\r\n        props.CompanyTemplateLicenze(response.data.licenzeShallow)\r\n\r\n        _getCompanyHistory(token,props.id_company)\r\n        .then( response => {\r\n          props.UpdateCompanyHistory(response)\r\n          _getLastMailDateAndTime(token,props.id_company) \r\n          .then( response => {\r\n            props.GetLastMailDateAndTime(response.data.last_mail_date_and_time)\r\n            _getCompanyOverview(token, props.id_company)\r\n            .then(function (response) {\r\n              let myPromise = new Promise(function (myResolve,myReject) {\r\n                props.UpdateCompanyOverview(response.data.errori, response.data.warning,response.data.ok )\r\n                myResolve();\r\n              });\r\n              myPromise.then(\r\n                function (value) {    \r\n                  let tmp_list = props.client_list;\r\n                  let tmp_list2 = []\r\n                  tmp_list.map(tmp_client => {\r\n                    props.lista_nomi_sedi.map((sede,i) => {\r\n                      if((tmp_client.sede === sede) || (tmp_client.sede === props.lista_id_sedi[i])){\r\n                        tmp_client.sede = String(props.lista_id_sedi[i]);\r\n                        tmp_list2.push(tmp_client)\r\n                      }\r\n                    })\r\n                  })\r\n                  \r\n                  props.FixSedi(tmp_list2, props.lista_nomi_sedi, props.lista_id_sedi);\r\n                },\r\n                function (error) {}\r\n              )\r\n              stopLoadingToast(loadingToast);\r\n            })\r\n            .catch(function (error) {\r\n              stopLoadingToast(loadingToast);\r\n              getErrorToast(String(error));\r\n            }) \r\n          })          \r\n        })\r\n        .catch(function (error) {\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(error));\r\n        })  \r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let continueUpdating = true;\r\n    updateData(continueUpdating);\r\n    let idInterval = setInterval(function(){ \r\n      updateData(continueUpdating);\r\n    }, defaultUpdateInterval);\r\n\r\n    //component unmount\r\n    return () => {\r\n      clearInterval(idInterval);\r\n    }\r\n  }, [])\r\n\r\n  const isOdd = (num) => { return ((num % 2)==1) ? true : false }\r\n\r\n  const getChilds = (listId) => {\r\n    //console.log(listId.length)\r\n    let listClients = [];\r\n    let tmp_client;\r\n    props.client_list.map( client => {\r\n      listId.map( id => {\r\n        if(id == client.id_client){\r\n          tmp_client = client;\r\n          props.lista_id_sedi.map( (id_sede,i) => {\r\n            if((id_sede == client.sede)||(props.lista_nomi_sedi[i] == client.sede)){\r\n              tmp_client.sede = props.lista_nomi_sedi[i];\r\n              listClients.push(tmp_client);\r\n            }\r\n          })\r\n        }\r\n      })\r\n    })\r\n    //console.log(listClients);\r\n    let list = [<Col className=\"oddColor col-md-4 col-xs-4\"><strong>Nome client</strong></Col>, <Col className=\"oddColor col-md-4 col-xs-4\"><strong>Sede</strong></Col>, <Col className=\"oddColor col-md-4 col-xs-4\"><strong>Tipologia</strong></Col>];\r\n    \r\n    listClients.map((client,i) => {\r\n      (isOdd(i)) \r\n      ?\r\n        list = [...list, <Col className=\"oddColor overview-popup-list vertical-aligner col-md-4 col-xs-4\"><Item key={client.id_client} text={client.nome_client} to={\"/company\"+props.nome_company+\"user\"+client.id_client} /></Col>, <Col className=\"oddColor vertical-aligner col-md-4 col-xs-4\">{client.sede}</Col>, <Col className=\"oddColor vertical-aligner col-md-4 col-xs-4\">{client.tipo_client}</Col>]\r\n      :\r\n        list = [...list, <Col className=\"evenColor overview-popup-list vertical-aligner col-md-4 col-xs-4\"><Item key={client.id_client} text={client.nome_client} to={\"/company\"+props.nome_company+\"user\"+client.id_client} /></Col>,  <Col className=\"evenColor vertical-aligner col-md-4 col-xs-4\">{client.sede}</Col>, <Col className=\"evenColor vertical-aligner col-md-4 col-xs-4\">{client.tipo_client}</Col>]\r\n      })\r\n    return list;\r\n  }\r\n\r\n  return (<Content title={props.title} browserTitle={props.title}>\r\n    <Row>\r\n      <ModalProvider>\r\n      <TrafficLightButtons size={3} titles={[\"Client con problemi\", \"Client con warnings\", \"Client senza problemi e warnings\"]} problems={props.company_template.client_overview.n_errori.length} warnings={props.company_template.client_overview.n_warnings.length} running={props.company_template.client_overview.n_running.length} popUpChildsWarnings={[]} popUpChildsProblemi={[]} idClientsWarnings={getChilds(props.company_template.client_overview.n_warnings)} idClientsProblemi={getChilds(props.company_template.client_overview.n_errori)} isHome={true} />\r\n          <Col xs={6} md={3}>\r\n            <Box title=\"Personalizzazione\" type=\"primary\" collapsable>\r\n              <Col md={12} xs={12}>\r\n                <b>Visualizzazione client: </b><ToggleCategoryPlace />\r\n              </Col>\r\n            </Box>\r\n          </Col>\r\n        \r\n        <Col xs={12} md={6}>\r\n          <LicensesList title=\"Gestione delle licenze\" />\r\n        </Col>\r\n        <Col md={6} xs={12}>\r\n          <History apex={props.apex}/>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <UserData email={props.email} emailNotify={props.emailNotify} ragioneSociale={props.nome_company} chiave={props.chiave_di_registrazione}/>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <ClientHandler last_mail_date={props.last_mail_date} />\r\n        </Col>\r\n        \r\n        {/*<Col md={3} xs={6}>\r\n          <center className=\"add\"><FontAwesomeIcon icon={[\"fas\", \"plus-circle\"]} /></center>\r\n        </Col>*/}\r\n      </ModalProvider>\r\n    </Row>\r\n  </Content>);\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(DashboardHome);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AdminLTE, { Sidebar } from 'adminlte-2-react';\r\nimport toast from 'react-hot-toast';\r\nimport { login, placesList, categoriesList } from '../ActionCreator';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardHome from './DashboardHome';\r\nimport {_getClientTypes, _getNomiSedi, _getNSedi, _getPlaces, _getShallowClients, _performLogin} from '../callableRESTs'; \r\nimport { _MSGCODE } from '../Constants';\r\nimport { fake_shallowClientList } from '../fakeData';\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from '../toastManager';\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps =  dispatch => ({\r\n    Login: (nome_company, email, emailNotify, client_list, token) => {\r\n      dispatch(login(nome_company, email, emailNotify, client_list, token))\r\n    },\r\n    LoginWithPlacesCategories: (nome_company, id_company, email, emailNotify, client_list, token, places_list, categories_list, lista_sedi, chiaveRegistrazione, listaNomiSedi, listaIdSedi) => {\r\n      dispatch(categoriesList(categories_list))\r\n      dispatch(placesList(places_list))\r\n      dispatch(login(nome_company, id_company, email, emailNotify, client_list, token, lista_sedi, chiaveRegistrazione, listaNomiSedi, listaIdSedi))\r\n    }\r\n  }\r\n);\r\n\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    client_list: state.client_list,\r\n    nome_company: state.company_template.company_data.ragione_sociale,\r\n    logged: state.logged\r\n  }\r\n);\r\n\r\n\r\nconst { Item } = Sidebar;\r\n\r\n/**\r\n * sign in/sign up form\r\n * @param {*} props \r\n */\r\nconst LoginPage = (props) => {\r\n\r\n  const [state, setState] = React.useState({\r\n    emailLogin: \"\",\r\n    pswLogin: \"\"\r\n  })\r\n\r\n  /**\r\n   * handle email login and map it to local state emailLogin\r\n   * @param {*} evt \r\n   */\r\n  const handleEmailLogin = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, emailLogin: evt.target.value };  \r\n    });\r\n  }\r\n\r\n  /**\r\n   * handle password login and map it to local state pswLogin\r\n   * @param {*} evt \r\n   */\r\n  const handlePswLogin = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, pswLogin: evt.target.value };\r\n    });\r\n  }\r\n\r\n  //const { addToast } = useToasts();\r\n\r\n  const LoginController = (email, psw) => {\r\n    const loadingToast = getLoadingToast(\"Accesso in corso...\");\r\n    _performLogin(email, psw)\r\n    .then(function (response) {\r\n      if(response.data.messageCode==_MSGCODE.ERR){\r\n        //login failed\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(response.data.message);\r\n      }else{\r\n        //login done, need to retieve 'sedi' and 'categories'\r\n        stopLoadingToast(loadingToast);\r\n        getSuccessToast(response.data.message);\r\n        //missing from login: email, emailNotify\r\n        let ragione_sociale = response.data.ragione_sociale;\r\n        let id_company = response.data.id_company;\r\n        let token = response.data.token;\r\n        let emailNotify = response.data.emailNotify;\r\n        let chiaveRegistrazione = response.data.chiave_di_registrazione;\r\n        _getShallowClients(id_company, token)\r\n        .then(function (response) {\r\n          // console.log(response.data.shallowClients)\r\n          let elencoClients = response.data.shallowClients;\r\n          _getPlaces(id_company, token)\r\n          .then(function (response) {\r\n            //get places\r\n            //console.log(response.data)\r\n            let sedi = response.data.sedi;\r\n            _getClientTypes(id_company, token)\r\n            .then(function (response) {\r\n              //get categories\r\n              let categories = response.data.categories;\r\n              _getNSedi(token, id_company)\r\n              .then(function (response) {\r\n                //get n sedi\r\n                let n_sedi = response.data.nsedi;\r\n                  _getNomiSedi(token, id_company)\r\n                  .then(function (response) {\r\n                    let listaNomi = [];\r\n                      let listaSedi = [];\r\n                      response.data.sedi.map((sede) => {\r\n                        listaNomi.push(sede.substring(sede.indexOf(\",\") + 1, sede.length));\r\n                        listaSedi.push(sede.substring(0,sede.indexOf(\",\")));\r\n                      })\r\n                      props.LoginWithPlacesCategories(ragione_sociale, id_company, email, emailNotify, elencoClients, token, sedi, categories, n_sedi, chiaveRegistrazione, listaNomi, listaSedi);\r\n                      // window.location.href = id_company;\r\n                      document.getElementsByClassName(\"sidebar-menu\")[0].getElementsByTagName(\"li\")[0].getElementsByTagName(\"a\")[0].click();\r\n                    })\r\n                  .catch(function (error) {\r\n                    getErrorToast(String(error));\r\n                  });\r\n\r\n              })\r\n              .catch(function (error) {\r\n                stopLoadingToast(loadingToast);\r\n                getErrorToast(String(error));\r\n              })\r\n            })\r\n            .catch(function (error) {\r\n              stopLoadingToast(loadingToast);\r\n              getErrorToast(String(error));\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            stopLoadingToast(loadingToast);\r\n            getErrorToast(String(error));\r\n          })\r\n        })\r\n        .catch(function (error) {\r\n          stopLoadingToast(loadingToast);\r\n          getErrorToast(String(error));\r\n        })\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  return (\r\n    (props.logged===false) \r\n    ?\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <br />\r\n          <div className=\"col-md-6 col-md-offset-3\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"LoginEmail1\">Indirizzo email</label>\r\n                <input type=\"email\" value={state.emailLogin} className=\"form-control\" id=\"LoginEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Email\" onChange={handleEmailLogin}/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"LoginPassword1\">Password</label>\r\n                <input type=\"password\" value={state.pswLogin} className=\"form-control\" id=\"LoginPassword1\" placeholder=\"Password\" onChange={handlePswLogin} />\r\n              </div>\r\n            </form>\r\n            <button className=\"btn btn-primary\" onClick={() => LoginController(state.emailLogin, state.pswLogin)}>Accedi</button>\r\n            <div className=\"overview-popup-list password-dimenticata\">\r\n              <Item to=\"/richiediPassword\" text=\"Password dimenticata\" />             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    :\r\n      <div>\r\n        <DashboardHome path={\"/\"+props.nome_company} title={props.nome_company} />\r\n        {props.client_list.map((item) => <Dashboard path={\"/company\"+props.nome_company+\"user\"+item.id_client} title={item.nome_client} />)}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(LoginPage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../ActionCreator';\r\nimport { _MSGCODE } from '../Constants';\r\nimport { _performSignUp } from '../callableRESTs';\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from '../toastManager';\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps =  dispatch => ({\r\n    SignUp: (message, messageCode) => {\r\n      dispatch(signUp(message, messageCode))\r\n    }\r\n  }\r\n);\r\n\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => ({\r\n    nome_company: state.nome_company,\r\n    message: state.message,\r\n    messageCode: state.messageCode,\r\n  }\r\n);\r\n\r\nconst SignUpPage = (props) => {\r\n  \r\n  const [state, setState] = React.useState({\r\n    emailSignUp: \"\",\r\n    pswSignUp: \"\",\r\n    emailAlertSignUp: \"\",\r\n    ragioneSocialeSignUp: \"\"\r\n  })\r\n\r\n  /**\r\n   * handle email login and map it to local state emailSignUp\r\n   * @param {*} evt \r\n   */\r\n  const handleEmailSignUp = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, emailSignUp: evt.target.value };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * handle password login and map it to local state pswSignUp\r\n   * @param {*} evt \r\n   */\r\n  const handlePswSignUp = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, pswSignUp: evt.target.value };\r\n    });\r\n  }\r\n\r\n    /**\r\n   * handle email login and map it to local state emailAlertSignUp\r\n   * @param {*} evt \r\n   */\r\n  const handleEmailAlertSignUp = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, emailAlertSignUp: evt.target.value };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * handle password login and map it to local state ragioneSocialeSignUp\r\n   * @param {*} evt \r\n   */\r\n  const handleRagioneSocialeSignUp = (evt) => {\r\n    setState((previousState) => {\r\n      return { ...previousState, ragioneSocialeSignUp: evt.target.value };\r\n    });\r\n  }\r\n\r\n  const SignUpController = (email, password, email_alert, ragione_sociale) => {\r\n    const loadingToast = getLoadingToast(\"Registrazione in corso...\");\r\n    _performSignUp(email, password, email_alert, ragione_sociale)\r\n    .then(function (response) {\r\n      if(response.data.messageCode==_MSGCODE.ERR){\r\n        //already registered\r\n        stopLoadingToast(loadingToast);\r\n        getErrorToast(response.data.message);\r\n      }else{\r\n        //signup done\r\n        stopLoadingToast(loadingToast);\r\n        getSuccessToast(response.data.message);\r\n      }\r\n      //props.SignUp(response.data.message, response.data.messageCode);\r\n    })\r\n    .catch(function (error) {\r\n      stopLoadingToast(loadingToast);\r\n      getErrorToast(String(error));\r\n    });\r\n  }\r\n\r\n  return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <br />\r\n            <div className=\"col-md-6 col-md-offset-3\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputEmail1\">Indirizzo email</label>\r\n                  <input type=\"email\" value={state.emailSignUp} onChange={handleEmailSignUp} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Email\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                  <input type=\"password\" value={state.pswSignUp} onChange={handlePswSignUp} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputEmail2\">Indirizzo email per le comunicazioni</label>\r\n                  <input type=\"email\" value={state.emailAlertSignUp} onChange={handleEmailAlertSignUp} className=\"form-control\" id=\"exampleInputEmail2\" aria-describedby=\"emailHelp\" placeholder=\"Email\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputRagioneSociale\">Ragione Sociale</label>\r\n                  <input value={state.ragioneSocialeSignUp} onChange={handleRagioneSocialeSignUp} className=\"form-control\" id=\"exampleInputRagioneSociale\" aria-describedby=\"emailHelp\" placeholder=\"Ragione Sociale\" />\r\n                </div>\r\n                <button type=\"button\" onClick={() => SignUpController(state.emailSignUp, state.pswSignUp, state.emailAlertSignUp, state.ragioneSocialeSignUp)} className=\"btn btn-primary\">Registrati</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(SignUpPage);\r\n","import React, { useEffect, useState } from 'react'\r\nimport { _unsubscribeAlert } from '../callableRESTs';\r\n\r\nconst UnsubscribeAlertMessage = (props) => {\r\n\r\n    const [unsubscribeParams, setUnsubscribeParams] = useState();\r\n    const [requestResponse, setRequestResponse] = useState();\r\n\r\n    useEffect(() => {\r\n        let parameters = window.location.search\r\n        let token = parameters.substring(parameters.indexOf(\"token=\")+\"token=\".length, parameters.indexOf(\"&tipologia_alert\"))\r\n        let tipologia_alert = parameters.substring(parameters.indexOf(\"tipologia_alert=\")+\"tipologia_alert=\".length, parameters.indexOf(\"&id_client\"))\r\n        let id_client = parameters.substring(parameters.indexOf(\"id_client=\")+\"id_client=\".length, parameters.length)\r\n        setUnsubscribeParams({\r\n            token: token,\r\n            tipologia_alert: tipologia_alert,\r\n            id_client: id_client\r\n        })\r\n        _unsubscribeAlert(token,tipologia_alert,id_client)\r\n        .then( response => {\r\n            setRequestResponse(response.data.messageCode);\r\n        })\r\n        .catch( error => {\r\n\r\n        })\r\n    },[])\r\n\r\n    return (\r\n    <div>\r\n    <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style={{\"position\":\"absolute\",\"width\":\"100%\",\"height\":\"100%\",\"backgroundColor\":\"antiquewhite\"}}>\r\n      <tr>\r\n        <td>&nbsp;</td>\r\n        <td class=\"container\">\r\n          <div class=\"content\">\r\n                <center><h1>ITSentinel</h1></center>\r\n            <table role=\"presentation\" class=\"main\" style={{\"margin\":\"auto\"}}>\r\n                <center>    \r\n                    <tr>\r\n                        <td class=\"wrapper\">\r\n                        <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n                            <tr>\r\n                            <td style={{\"textAlign\":\"center\"}}>\r\n                            \r\n                                    {(requestResponse==0)\r\n                                    ?    \r\n                                        <center><p>La disattivazione delle mail per {unsubscribeParams && unsubscribeParams.tipologia_alert.toLowerCase().replace(\"_\", \" \")} è andata a buon fine.</p></center>\r\n                                    :\r\n                                        <center><p>Impossibile disattivare le email per {unsubscribeParams && unsubscribeParams.tipologia_alert.toLowerCase().replace(\"_\", \" \")}. Token già utilizzato o non valido.</p></center>\r\n                                    }\r\n\r\n                                \r\n                                <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"btn btn-primary\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                    <td align=\"center\">\r\n                                        <table style={{\"margin\": \"0 auto;\"}} role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                            <td> <center><a href=\"http://217.160.240.146:3000/\" target=\"_blank\" style={{\"color\":\"white\"}}>Vai alla dashboard</a></center> </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </table>\r\n                                <table style={{\"margin\":\"auto\"}}>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td><center><small>{new Date().toUTCString()}</small></center></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                            </tr>\r\n                        </table>\r\n                        </td>\r\n                    </tr>\r\n                </center>\r\n            </table>\r\n\r\n          </div>\r\n        </td>\r\n        <td>&nbsp;</td>\r\n      </tr>\r\n    </table>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default UnsubscribeAlertMessage;","import React from \"react\";\r\nimport { _richiediPassword } from \"../callableRESTs\";\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from \"../toastManager\";\r\n\r\nconst RichiediPassword = () => {\r\n\r\n    const [state, setState] = React.useState({\r\n        email: \"\"\r\n    })\r\n    \r\n    /**\r\n     * handle email login and map it to local state emailLogin\r\n     * @param {*} evt \r\n     */\r\n    const handleEmailLogin = (evt) => {\r\n    setState((previousState) => {\r\n        return { ...previousState, email: evt.target.value };  \r\n    });\r\n    }\r\n\r\n    const richiediPassword = () => {\r\n        const loadingToast = getLoadingToast(\"Invio mail richiesta password...\");\r\n        _richiediPassword(state.email)\r\n        .then( () => {\r\n            stopLoadingToast(loadingToast);\r\n            getSuccessToast(\"Mail inviata correttamente\");\r\n        })\r\n        .catch( error => {\r\n            stopLoadingToast(loadingToast);\r\n            getErrorToast(String(error));\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          <br />\r\n          <div className=\"col-md-6 col-md-offset-3\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"LoginEmail1\">Indirizzo email</label>\r\n                <input type=\"email\" value={state.email} className=\"form-control\" id=\"LoginEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Email\" onChange={handleEmailLogin}/>\r\n              </div>\r\n            </form>\r\n            <button className=\"btn btn-primary\" onClick={richiediPassword}>Richiedi password</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default RichiediPassword;","import React, { useEffect, useState } from \"react\"\r\nimport { _cambioPassword, _isTokenValid } from \"../callableRESTs\";\r\nimport { getErrorToast, getLoadingToast, getSuccessToast, stopLoadingToast } from \"../toastManager\";\r\n\r\nconst ChangePassword = () => {\r\n    \r\n    let parameters = window.location.search;\r\n    let token = parameters.substring(parameters.indexOf(\"token=\")+\"token=\".length, parameters.indexOf(\"&id_company\"));\r\n    let id_company = parameters.substring(parameters.indexOf(\"id_company=\")+\"id_company=\".length);\r\n\r\n    const [state,setState] = useState({\r\n        nuovaPassword: \"\",\r\n        confermaPassword: \"\"\r\n    });\r\n\r\n    const [isTokenValid,setIsTokenValid] = useState(false);\r\n\r\n    const handleNuovaPassword = (e) => {\r\n        setState({ ...state, nuovaPassword: e.target.value});\r\n    }\r\n\r\n    const handleConfermaPassword = (e) => {\r\n        setState({ ...state, confermaPassword: e.target.value});\r\n    }\r\n\r\n    useEffect(() => {\r\n        _isTokenValid(token)\r\n        .then( response => {\r\n            if(response.data.messageCode == 0) {\r\n                setIsTokenValid(true);\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const cambiaPassword = () => {\r\n        const loadingToast = getLoadingToast(\"Modifica password...\");\r\n\r\n        if(state.nuovaPassword == state.confermaPassword && state.nuovaPassword!=\"\"){\r\n            _cambioPassword(token,id_company,state.nuovaPassword)\r\n            .then( response => {\r\n                stopLoadingToast(loadingToast);\r\n                getSuccessToast(\"Password cambiata correttamente\");\r\n                document.getElementsByClassName(\"sidebar-menu\")[0].getElementsByTagName(\"li\")[0].getElementsByTagName(\"a\")[0].click();\r\n            })\r\n            .catch( error => {\r\n                stopLoadingToast(loadingToast);\r\n                getErrorToast(String(error));\r\n            })\r\n        } else {\r\n            getErrorToast(\"Le password devono essere uguali\")\r\n        }\r\n        stopLoadingToast(loadingToast);\r\n    }\r\n\r\n    return (\r\n        (isTokenValid)\r\n        ?\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <br />\r\n                <div className=\"col-md-6 col-md-offset-3\">\r\n                    <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"LoginEmail1\">Nuova password</label>\r\n                        <input type=\"password\" className=\"form-control\" id=\"LoginEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Email\" onChange={handleNuovaPassword}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"LoginEmail1\">Conferma password</label>\r\n                        <input type=\"password\" className=\"form-control\" id=\"LoginEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Email\" onChange={handleConfermaPassword}/>\r\n                    </div>\r\n                    </form>\r\n                    <button className=\"btn btn-primary\" onClick={cambiaPassword}>Cambia password</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        :\r\n            <h1 style={{\"text-align\": \"center\",\"margin-top\": \"75px\"}}>Token già utilizzato o non valido</h1>\r\n    )\r\n}\r\n\r\nexport default ChangePassword;","import React, { useEffect } from 'react';\r\nimport AdminLTE, { Sidebar } from 'adminlte-2-react';\r\nimport { connect } from 'react-redux';\r\nimport Dashboard from './components/Dashboard';\r\nimport LoginPage from './components/LoginPage';\r\nimport SignUpPage from './components/SignUpPage';\r\nimport DashboardHome from './components/DashboardHome';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { searchClient, totalReset } from './ActionCreator';\r\nimport { _FILTERS, _LICENZE } from './Constants';\r\nimport { toaster } from './toastManager';\r\nimport { idToNomeLicenza, idToNomeSede } from './Tools';\r\nimport UnsubscribeAlertMessage from './components/UnsubscribeAlertMessage';\r\nimport RichiediPassword from './components/RichiediPassword';\r\nimport ChangePassword from './components/ChangePassword';\r\n\r\n/**\r\n * connect the actions to the component\r\n * @param {*} dispatch \r\n */\r\nconst mapDispatchToProps =  dispatch => {\r\n  return{\r\n    Search: (nome_client) => {\r\n      dispatch(searchClient(nome_client))\r\n    },\r\n    TotalReset: () => {\r\n      dispatch(totalReset())\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * connect the redux state to the component\r\n * @param {*} state \r\n */\r\nconst mapStateToProps = state => {\r\n  return {\r\n    client_list: state.client_list,\r\n    nome_company: state.company_template.company_data.ragione_sociale,\r\n    logged: state.logged,\r\n    searched_client: state.searched_client,\r\n    categories_list: state.categories_list,\r\n    places_list: state.places_list,\r\n    category_vs_place: state.company_template.category_vs_place,\r\n    token: state.token,\r\n    id_company: state.id_company,\r\n    lista_nomi_sedi: state.lista_nomi_sedi,\r\n    lista_id_sedi: state.lista_id_sedi\r\n  }\r\n}\r\n\r\nconst { Item, Searchbar } = Sidebar;\r\n\r\nconst getSidebarUnlogged = () =>{\r\n  let item_list = [];\r\n  item_list = [ <Item icon=\"fa-sign-in-alt\" key=\"1\" text=\"Accedi\" to=\"/accedi\"/>, \r\n                <Item icon=\"fa-user-plus\" key=\"2\" text=\"Registrati\" to=\"/registrati\" />];\r\n  return item_list;\r\n}\r\n\r\nconst App = (props) => {\r\n  const handleChange = event => {\r\n    props.Search(event.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"sidebar-menu\")[0].getElementsByTagName(\"li\")[0].getElementsByTagName(\"a\")[0].click();\r\n  },[])\r\n\r\n  const getSidebarByType = (client_list, nome_company, searched_client, categories_list) =>{\r\n    /**\r\n     * {\"Client\": 1,\r\n     * \"Server\": 2}\r\n     */\r\n    let categories = [\"Client\",\"Server\"];\r\n    let categoriesIcons = [\"fa-desktop\",\"fa-server\"]\r\n    let lastComponent = [];\r\n    if(props.lista_id_sedi != undefined){ \r\n      props.lista_id_sedi.map((sede, j) => {\r\n      (client_list.filter(function(o) { return ((o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)|| o.sede == sede) && o.nome_client.includes(searched_client.toUpperCase()))}).length > 0 || searched_client===\"\")\r\n      ? lastComponent = [lastComponent,<Item icon=\"fa-map-marker-alt\" text={idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)+\" (\"+client_list.filter(function(o) {return (o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi) || o.sede == sede) }).length+\")\"}>\r\n        {categories.map((category,i) => {\r\n          return (client_list.filter(function(o) { return ((o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi) || o.sede == sede) && o.tipo_client==category)}).length > 0 && client_list.filter(function(o) { return ((o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)|| o.sede == sede) && o.nome_client.includes(searched_client.toUpperCase()))}).length > 0)\r\n          ? <Item icon=\"fa-users\" text={category+ \" (\"+client_list.filter(function(o) { return ((o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)|| o.sede == sede) && o.tipo_client==category)}).length+\")\"}>\r\n          {props.client_list.map((client) => {\r\n            //if((client.sede == sede && client.tipo_client===category) || (client.sede == props.lista_nomi_sedi[j]  && client.tipo_client===category)){\r\n            //    console.log(client.sede)\r\n            //  console.log(props.lista_nomi_sedi[j])\r\n            //  console.log(sede)\r\n            //}\r\n            \r\n            return (((client.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi) || client.sede == sede) && client.tipo_client===category) || (client.sede == props.lista_nomi_sedi[j]  && client.tipo_client===category))\r\n            ? (searched_client==\"\")\r\n              ? <Item icon={categoriesIcons[i]} key={client.id_client} text={<>{client.nome_client} <FontAwesomeIcon icon={[\"far\", \"dot-circle\"]} /></>} to={\"/company\"+nome_company+\"user\"+client.id_client} />\r\n              : (client.nome_client.toUpperCase().includes(searched_client.toUpperCase())) ? <Item icon={categoriesIcons[i]} key={client.id_client} text={<>{client.nome_client} <FontAwesomeIcon icon={[\"far\", \"dot-circle\"]} /></>} to={\"/company\"+nome_company+\"user\"+client.id_client} /> : <></>\r\n            : <></>\r\n            })\r\n          }\r\n          </Item>\r\n        : <></>  \r\n        })}\r\n      </Item>]\r\n      : lastComponent = lastComponent;\r\n    })\r\n  }\r\n    return lastComponent;\r\n  }\r\n\r\n  const getSidebarByLicense = (client_list, nome_company, searched_client, licenses_list) =>{\r\n    /**\r\n     * {\"1\": 1,\r\n     * \"2\": 2,\r\n     * ...}\r\n     */\r\n    let categories = [1,2,3,4,5];\r\n    let lastComponent = [];\r\n    if(props.lista_id_sedi != undefined){ \r\n      props.lista_id_sedi.map((sede, j) => {\r\n      (client_list.filter(function(o) { return ((o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)|| o.sede == sede) && o.nome_client.includes(searched_client.toUpperCase()))}).length > 0 || searched_client===\"\")\r\n      ? \r\n        lastComponent = [lastComponent,<Item icon=\"fa-map-marker-alt\" text={idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)+\" (\"+client_list.filter(function(o) { \r\n          return (o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi) || o.sede == sede)\r\n           }).length+\")\"}>\r\n          {categories.map((category) => {\r\n            return (client_list.filter(function(o) { \r\n              return ((o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)|| o.sede == sede) && o.classe_licenza.includes(category))}).length > 0 && client_list.filter(function(o) { return ((o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)|| o.sede == sede) && o.nome_client.includes(searched_client.toUpperCase()))}).length > 0)\r\n            ? <Item icon=\"fa-users\" text={idToNomeLicenza(category)+ \" (\"+client_list.filter(function(o) { return ((o.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)|| o.sede == sede) && o.classe_licenza.includes(category))}).length+\")\"}>\r\n            {props.client_list.map((client) => {\r\n              return (((client.sede == idToNomeSede(sede, props.lista_nomi_sedi, props.lista_id_sedi)|| client.sede == sede) && client.classe_licenza.includes(category)) || (client.sede == props.lista_nomi_sedi[j] && client.classe_licenza.includes(category)))\r\n              ? (searched_client==\"\")\r\n                ? <Item icon=\"fa-desktop\" key={client.id_client} text={<>{client.nome_client} <FontAwesomeIcon icon={[\"far\", \"dot-circle\"]} /></>} to={\"/company\"+nome_company+\"user\"+client.id_client} />\r\n                : (client.nome_client.toUpperCase().includes(searched_client.toUpperCase())) ? <Item icon=\"fa-desktop\" key={client.id_client} text={<>{client.nome_client} <FontAwesomeIcon icon={[\"far\", \"dot-circle\"]} /></>} to={\"/company\"+nome_company+\"user\"+client.id_client} /> : <></>\r\n              : <></>\r\n              })\r\n            }\r\n          </Item>\r\n        : <></>  \r\n        })}\r\n      </Item>]\r\n      : lastComponent = lastComponent;\r\n    })\r\n  }\r\n    return lastComponent;\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      {(window.location.pathname==\"/unsubscribeAlert\")\r\n      ?\r\n        <UnsubscribeAlertMessage path=\"/unsubscribeAlert\" />\r\n      :\r\n        <>\r\n          {toaster}\r\n          {props.logged==true \r\n          ? <AdminLTE title={[<FontAwesomeIcon icon={[\"fas\", \"home\"]} />, \" Home\"]} homeTo={\"/\"+props.id_company} titleShort={<FontAwesomeIcon icon={[\"fas\", \"home\"]} />} theme=\"blue\" sidebar={<><Item icon=\"fa-user-alt\" key=\"-1\" text=\"Account\" to={\"/\"+props.id_company} /><Searchbar onChange={handleChange} includeButton=\"true\" placeholder=\"Cerca...\" />{(props.category_vs_place) ? getSidebarByType(props.client_list, props.nome_company, props.searched_client, props.categories_list) : getSidebarByLicense(props.client_list, props.nome_company, props.searched_client, props.places_list)}<a id=\"logoutButton\" onClick={() => {props.TotalReset()}}><Item className=\"clickable\" icon=\"fas-sign-out-alt\" text={\"Logout\"} to={\"/accedi\"}></Item></a> </>}>\r\n              <DashboardHome path={\"/\"+props.id_company} title={props.nome_company} />\r\n              {props.client_list.map((item) => <Dashboard path={\"/company\"+props.nome_company+\"user\"+item.id_client} id_client={item.id_client} id_company={props.id_company} token={props.token} client={item} title={item.nome_client} />)}  \r\n            </AdminLTE>\r\n          : <AdminLTE title={[\"IT Sentinel\"]} titleShort={[\"ITS\"]} theme=\"blue\" sidebar={getSidebarUnlogged()}>\r\n              <div path=\"/accedi\" title=\"Accedi\"><LoginPage /></div>\r\n              <div path=\"/registrati\" title=\"Registrati\"><SignUpPage /></div>\r\n              <div path=\"/richiediPassword\" title=\"Richiedi nuova password\"><RichiediPassword /></div>\r\n              <div path=\"/changePassword\" title=\"Cambio password\"><ChangePassword /></div>\r\n            </AdminLTE>\r\n          }\r\n        </>\r\n      }\r\n  </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\nimport * as types from './ActionTypes';\r\nimport { _LICENZE } from './Constants';\r\n\r\nconst initialState = {\r\n  message : \"\",\r\n  messageCode : 0,\r\n  id_company : null,\r\n  client_list : [],\r\n  logged: false,\r\n  token : null,\r\n  licensesList : [{name: _LICENZE.SISTEMA_OPERATIVO.label, id: _LICENZE.SISTEMA_OPERATIVO.tipo},\r\n    {name: _LICENZE.BACKUP.label, id: _LICENZE.BACKUP.tipo},\r\n    {name: _LICENZE.RETE.label, id: _LICENZE.RETE.tipo},\r\n    {name: _LICENZE.VULNERABILITA.label, id: _LICENZE.VULNERABILITA.tipo},\r\n    {name: _LICENZE.ANTIVIRUS.label, id: _LICENZE.ANTIVIRUS.tipo}\r\n  ],\r\n  searched_client: \"\",\r\n  places_list : [],\r\n  categories_list : [],\r\n  services_list : [],\r\n  events_list : [],\r\n  n_totali: 0,\r\n  n_running: 0,\r\n  n_stop: 0,\r\n  n_monitorati: 0,\r\n  lista_nomi_sedi: [],\r\n  lista_id_sedi: [],\r\n  configurazione_alert:[],\r\n  client_template: {\r\n    last_insert_date: \"\",\r\n    windows_services: {\r\n      n_monitorati: 0,\r\n      n_esecuzione: 0,\r\n      n_stop: 0,\r\n      n_totali: 0\r\n    },\r\n    windows_events: {\r\n      n_problemi: 0,\r\n      n_warnings: 0\r\n    },\r\n    info: { },\r\n    alert: [],\r\n    history: {\r\n      lastUpdate: \"\",  //Dinamico\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: []  //Dinamico\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            opacityFrom: 0.7,\r\n            opacityTo: 0.9,\r\n            stops: [0, 90, 100]\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n      },\r\n      colors: [\"#dd4b39\", \"#f39c12\"],\r\n      series: [\r\n        {\r\n          name: \"N° di warnings\",\r\n          data: [],   //Dinamico\r\n          color: \"#f39c12\"\r\n        },\r\n        {\r\n          name: \"N° di problemi\",\r\n          data: [],  //Dinamico\r\n          color: \"#dd4b39\"\r\n        }\r\n      ]\r\n    },\r\n    //services, events, drives\r\n    overview: {\r\n      problemi: [0,0,0],\r\n      warnings: [0,0,0],\r\n      ok: [0,0,0]\r\n    },\r\n    drives: [\r\n      {\r\n        perc_free: 0,\r\n        total_size_GB: 0,\r\n        occupied_GB: 0,\r\n        free_GB: 0,\r\n        ultimo_aggiornamento: \"\"\r\n      }\r\n    ]\r\n  },\r\n  company_template: {\r\n    last_mail_date: \"\",\r\n    client_overview: {\r\n      n_errori: [],\r\n      n_warnings: [],\r\n      n_running: []\r\n    },\r\n    category_vs_place: true,\r\n    history: {  \r\n      lastUpdate: \"\",  //Dinamico\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: []  //Dinamico\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            opacityFrom: 0.7,\r\n            opacityTo: 0.9,\r\n            stops: [0, 90, 100]\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n      },\r\n      colors: [\"#dd4b39\", \"#f39c12\"],\r\n      series: [\r\n        {\r\n          name: \"N° di client con warnings\",\r\n          data: [],   //Dinamico\r\n          color: \"#f39c12\"\r\n        },\r\n        {\r\n          name: \"N° di client con problemi\",\r\n          data: [],  //Dinamico\r\n          color: \"#dd4b39\"\r\n        }\r\n      ]\r\n    },\r\n    licensesList: [],\r\n    company_data: {\r\n      email: null,\r\n      emailNotify: null,\r\n      ragione_sociale: null,\r\n      n_sedi: 0 ,\r\n      chiave_di_registrazione: null\r\n    }\r\n  }\r\n};\r\nexport function rootReducer(state = initialState, action) {\r\n  if (action.type === types.LOGIN) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      company_template: {\r\n        ...state.company_template,\r\n        company_data: {\r\n          ...state.company_template.company_data,\r\n          ragione_sociale: action.nome_company,\r\n          email: action.email,\r\n          emailNotify: action.emailNotify,\r\n          chiave_di_registrazione: action.chiave_di_registrazione,\r\n          n_sedi: action.lista_sedi\r\n        }\r\n      },\r\n      // nome_company: action.nome_company,\r\n      id_company: action.id_company,\r\n      // email: action.email,\r\n      // emailNotify: action.emailNotify,\r\n      client_list: action.client_list,\r\n      logged: true,\r\n      token: action.token,\r\n      // lista_sedi: action.lista_sedi,\r\n      // chiave_di_registrazione: action.chiave_di_registrazione,\r\n      lista_nomi_sedi: action.listaNomiSedi,\r\n      lista_id_sedi: action.listaIdSedi\r\n    });\r\n  }\r\n  if (action.type === types.UPDATECOMPANYDATA) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      company_template: {\r\n        ...state.company_template,\r\n        company_data: {\r\n          ...state.company_template.company_data,\r\n          ragione_sociale: action.nome_company,\r\n          email: action.email,\r\n          emailNotify: action.emailNotify\r\n        }\r\n      },\r\n      // nome_company: action.nome_company,\r\n      // email: action.email,\r\n      // emailNotify: action.emailNotify,\r\n      token: action.token\r\n    });\r\n  }\r\n  if (action.type === types.SIGNUP) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      message: action.message,\r\n      messageCode: action.messageCode\r\n    });\r\n  }\r\n  if (action.type === types.ADDLICENSE) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      licensesList: action.license\r\n    });\r\n  }\r\n  if (action.type === types.REMOVELICENSE) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      licensesList: action.license\r\n    });\r\n  }\r\n  if (action.type === types.SEARCHCLIENT) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      searched_client: action.client_name\r\n    });\r\n  }\r\n  if (action.type === types.PLACESLIST) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      places_list: action.places_list\r\n    });\r\n  }\r\n  if (action.type === types.CATEGORIESLIST) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      categories_list: action.categories_list\r\n    });\r\n  }\r\n  if (action.type === types.CATEGORYVSPLACE) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      company_template: {\r\n        ...state.company_template,\r\n        category_vs_place: action.category_vs_place\r\n      }\r\n    });\r\n  }\r\n  if (action.type === types.SERVICESLIST) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      services_list: action.servicesList\r\n    });\r\n  }\r\n  if (action.type === types.EVENTSLIST) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      events_list: action.eventsList\r\n    });\r\n  }\r\n  if (action.type === types.SERVIZIOVERVIEW) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      n_totali: action.n_totali,\r\n      n_running: action.n_running,\r\n      n_stop: action.n_stop,\r\n      n_monitorati: action.n_monitorati\r\n    });\r\n  }\r\n  if (action.type === types.LISTANOMISEDI) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      //client_list: action.tmp_list,\r\n      lista_nomi_sedi: action.listaNomi,\r\n      token: action.token,\r\n      lista_id_sedi: action.listaId,\r\n      company_template: {\r\n        ...state.company_template,\r\n        company_data: {\r\n          ...state.company_template.company_data,\r\n          n_sedi: action.listaNomi.length\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.UPDATESIDEBAR) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_list: action.clientList,\r\n      token: action.token,\r\n      lista_sedi: action.lista_sedi,\r\n      lista_nomi_sedi: action.listaNomi,\r\n      lista_id_sedi: action.listaSedi\r\n    });\r\n  }\r\n  if(action.type === types.CLIENTTEMPLATEWINDOWSEVENTS) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_template: {\r\n        ...state.client_template,\r\n        windows_events: action.windows_events\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.CLIENTTEMPLATEWINDOWSSERVICES) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_template: {\r\n        ...state.client_template,\r\n        windows_services: action.windows_services\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.CLIENTTEMPLATEINFO) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_template: {\r\n        ...state.client_template,\r\n        info: action.info\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.CLIENTTEMPLATEALERT) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_template: {\r\n        ...state.client_template,\r\n        alert: action.alert\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.CLIENTTEMPLATERESET) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_template: initialState.client_template,\r\n      services_list: initialState.services_list,\r\n      events_list: initialState.events_list\r\n    });\r\n  }\r\n  if(action.type === types.COMPANYTEMPLATELICENZE) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      company_template: {\r\n        ...state.company_template,\r\n        licensesList: action.lista_licenze\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.UPDATECLIENTOVERVIEW) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_template: {\r\n        ...state.client_template,\r\n        overview: action.overview\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.GETLASTDATE) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_template: {\r\n        ...state.client_template,\r\n        last_insert_date: action.date\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.UPDATECOMPANYOVERVIEW) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      company_template: {\r\n        ...state.company_template,\r\n        client_overview: action.overview\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.FIXSEDI) {\r\n    return Object.assign({}, state, {\r\n      ...state,\r\n      client_list: action.lista_client\r\n    });\r\n  }\r\n  if(action.type === types.UPDATECLIENTHISTORY) {\r\n    return Object.assign({}, state, {\r\n      client_template: {\r\n        ...state.client_template,\r\n        history: {\r\n          ...state.client_template.history,\r\n          lastUpdate: action.history_data.last_update,\r\n          options: {\r\n            ...state.client_template.history.options,\r\n            xaxis: {\r\n              categories: action.history_data.xaxis\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              ...state.client_template.history.series[0],\r\n              data: action.history_data.warnings,   //Dinamico\r\n            },\r\n            {\r\n              ...state.client_template.history.series[1],\r\n              data: action.history_data.problems,  //Dinamico\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.UPDATECOMPANYHISTORY) {\r\n    return Object.assign({}, state, {\r\n      company_template: {\r\n        ...state.company_template,\r\n        history: {\r\n          ...state.company_template.history,\r\n          lastUpdate: action.history_data.last_update,\r\n          options: {\r\n            ...state.company_template.history.options,\r\n            xaxis: {\r\n              ...state.company_template.history.options.xaxis,\r\n              categories: action.history_data.xaxis,\r\n              type: \"date\"\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              ...state.company_template.history.series[0],\r\n              data: action.history_data.warnings,   //Dinamico\r\n            },\r\n            {\r\n              ...state.company_template.history.series[1],\r\n              data: action.history_data.problems,  //Dinamico\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if(action.type === types.UPDATECLIENTLICENSES) {\r\n    for(let i=0; i<state.client_list.length; i++) {\r\n      if(state.client_list[i].id_client == action.id_client){\r\n        state.client_list[i].classe_licenza.push(action.license)\r\n      }\r\n    }\r\n    return Object.assign({}, state);\r\n  }\r\n  if(action.type === types.TOTALRESET) {\r\n    return Object.assign({}, state = initialState, {\r\n\r\n    });\r\n  }\r\n  if(action.type === types.UPDATETOKEN) {\r\n    return Object.assign({}, state, {\r\n      token: action.token\r\n    });\r\n  }\r\n  if(action.type === types.GETCONFIGURAZIONEALERT) {\r\n    return Object.assign({}, state, {\r\n      configurazione_alert: action.operazioni\r\n    });\r\n  }\r\n  if(action.type === types.GETLASTMAILDATE) {\r\n    console.log(action.last_mail_date)\r\n    return Object.assign({}, state, {\r\n      company_template : {\r\n        ...state.company_template,\r\n        last_mail_date: action.last_mail_date\r\n      }\r\n    });\r\n  }\r\n  //returning the state\r\n  return state;\r\n}\r\n\r\nexport const persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  blacklist: []\r\n};\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { persistConfig, rootReducer } from './reducer';\r\n\r\n//create the redux store\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\nexport const store = createStore(pReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport const persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","const port = \"8080\";\r\nconst ip = \"217.160.240.146\";\r\nconst buildurl = \"http://\"+ip+\":\"+port+\"/be/main/\";\r\nexport const url_login = buildurl+\"login\"; //V\r\nexport const url_signup = buildurl+\"registrazione\"; //V\r\nexport const url_lista_sedi = buildurl+\"clientLicenseList\";\r\nexport const url_lista_gruppi = buildurl+\"getClientTypes\";\r\nexport const url_lista_servizi = buildurl+\"listaservizi\";\r\nexport const url_lista_tipo_dispositivi = buildurl+\"listatipodispositivi\";\r\nexport const url_lista_licenze = buildurl+\"listalicenze\";\r\nexport const url_deep_client = buildurl+\"deepClient\";\r\nexport const url_shallow_clients = buildurl+\"shallowClients\";\r\nexport const url_edit_company_data = buildurl+\"editCompanyData\";\r\nexport const url_deep_licenze = buildurl+\"getLicenzeDeep\";\r\nexport const url_shallow_licenze = buildurl+\"getLicenzeShallow\";\r\nexport const url_get_servizi_monitorati = buildurl+\"getServiziMonitorati\";\r\nexport const url_get_servizi_all = buildurl+\"getServiziAll\";\r\nexport const url_modifica_monitoraggio_servizio = buildurl+\"modificaMonitoraggioServizio\";\r\nexport const url_get_servizi_overview = buildurl+\"getServiziOverview\";\r\nexport const url_get_eventi_overview = buildurl+\"getEventiOverview\";\r\nexport const url_get_eventi = buildurl+\"getEventi\";\r\nexport const url_modifica_sede = buildurl+\"modificaSedeClient\";\r\nexport const url_get_drives = buildurl+\"getDrives\";\r\nexport const url_get_n_sedi = buildurl+\"getNSedi\";\r\nexport const url_inserimento_sede = buildurl+\"inserimentoSede\";\r\nexport const url_cancellazione_sede = buildurl+\"cancellazioneSede\";\r\nexport const url_get_nomi_sedi = buildurl+\"getNomiSedi\";\r\nexport const url_get_latest_alert = buildurl+\"getLatestAlerts\";\r\nexport const url_compra_licenza = buildurl+\"compraLicenza\";\r\nexport const url_get_client_overview_services = buildurl+\"getClientOverview\";\r\nexport const url_get_company_overview = buildurl+\"getCompanyOverview\";\r\nexport const url_get_client_history = buildurl + \"getClientHistory\";\r\nexport const url_get_company_history = buildurl + \"getCompanyHistory\";\r\nexport const url_assign_license = buildurl + \"assegnaLicenza\";\r\nexport const url_modifica_monitoraggio_alert = buildurl + \"modificaMonitoraggioAlert\";\r\nexport const url_get_monitoraggio_alert = buildurl + \"getMonitoraggioAlert\";\r\nexport const url_update_monitoraggio_alert = buildurl + \"updateMonitoraggioAlert\";\r\nexport const url_get_last_date = buildurl + \"getLastDate\";\r\nexport const url_get_all_services_of_company = buildurl + \"getAllServicesOfCompany\";\r\nexport const url_get_all_nomi_alert_configurazione = buildurl + \"getAllNomiAlertConfigurazione\";\r\nexport const url_update_monitora_all_services = buildurl + \"updateMonitoraAllServices\";\r\nexport const url_update_monitora_all_alerts = buildurl + \"updateMonitoraAllAlerts\";\r\nexport const url_unsubscribe_alert = buildurl + \"unsubscribeAlert\";\r\nexport const url_change_mail_interval = buildurl + \"changeMailInterval\";\r\nexport const url_get_mail_interval = buildurl + \"getMailInterval\";\r\nexport const url_richiedi_password = buildurl + \"richiediPassword\";\r\nexport const url_cambio_password = buildurl + \"changePassword\";\r\nexport const url_is_token_valid = buildurl + \"isTokenValid\";\r\nexport const url_get_last_mail_date_and_time = buildurl + \"getLastMailDate\";\r\n\r\n\r\n\r\nconst portFake = \"3001\"; \r\nconst ipFake = \"127.0.0.1\";//\"217.160.240.146\";\r\nconst buildurlFake = \"http://\"+ipFake+\":\"+portFake+\"/\";\r\nexport const url_loginFake = buildurlFake+\"login\";\r\nexport const url_signupFake = buildurlFake+\"signup\";\r\nexport const url_lista_sediFake = buildurlFake+\"listasedi\";\r\nexport const url_lista_gruppiFake = buildurlFake+\"listagruppi\";\r\nexport const url_lista_serviziFake = buildurlFake+\"listaservizi\";\r\nexport const url_lista_tipo_dispositiviFake = buildurlFake+\"listatipodispositivi\";\r\nexport const url_lista_licenzeFake = buildurlFake+\"listalicenze\";\r\nexport const url_shallow_licenzeFake = buildurlFake+\"getLicenzeShallow\";\r\nexport const url_deep_clientFake = buildurlFake+\"deepClient\";\r\nexport const url_edit_company_dataFake = buildurlFake+\"editCompanyData\";\r\nexport const url_get_servizi_monitoratiFake = buildurlFake+\"getServiziMonitorati\";\r\nexport const url_get_servizi_monitoratiFake2 = buildurlFake+\"getServiziMonitorati2\";\r\nexport const url_get_servizi_allFake = buildurlFake+\"getServiziAll\";\r\nexport const url_get_servizi_allFake2 = buildurlFake+\"getServiziAll2\";\r\nexport const url_get_servizi_overviewFake = buildurlFake+\"getServiziOverview\";\r\nexport const url_get_eventi_overviewFake = buildurlFake+\"getEventiOverview\";\r\nexport const url_get_eventiFake = buildurlFake+\"getEventi\";\r\nexport const url_get_n_sediFake = buildurlFake+\"getNSedi\";"],"sourceRoot":""}